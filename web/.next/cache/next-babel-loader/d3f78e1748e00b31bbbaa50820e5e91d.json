{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/components/DaySection.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Box, Button, IconButton, Text } from \"@chakra-ui/core\";\nimport { useApolloClient } from \"@apollo/client\";\nimport { useDeleteWorkoutMutation, useExoQuery } from \"../generated/graphql\";\nexport var DaySection = function DaySection(_ref) {\n  _s();\n\n  var _exo$exo, _workout$workoutDetai;\n\n  var workout = _ref.workout;\n  var apolloClient = useApolloClient();\n\n  var _useExoQuery = useExoQuery(),\n      exo = _useExoQuery.data;\n\n  var _useDeleteWorkoutMuta = useDeleteWorkoutMutation(),\n      _useDeleteWorkoutMuta2 = _slicedToArray(_useDeleteWorkoutMuta, 1),\n      deleteWorkout = _useDeleteWorkoutMuta2[0];\n\n  var exoIdtoExoDesc = {};\n  exo === null || exo === void 0 ? void 0 : (_exo$exo = exo.exo) === null || _exo$exo === void 0 ? void 0 : _exo$exo.forEach(function (e) {\n    exoIdtoExoDesc[e.id] = e.exoDesc;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: workout ? /*#__PURE__*/_jsxDEV(Box, {\n      p: 5,\n      shadow: \"md\",\n      borderWidth: \"1px\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        as: Button,\n        icon: \"delete\",\n        \"aria-label\": \"Delete Workout\",\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _yield$deleteWorkout, errors;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  console.log(workout);\n                  _context.next = 3;\n                  return deleteWorkout({\n                    variables: {\n                      id: workout.id\n                    }\n                  });\n\n                case 3:\n                  _yield$deleteWorkout = _context.sent;\n                  errors = _yield$deleteWorkout.errors;\n\n                  if (errors) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 8;\n                  return apolloClient.resetStore();\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }, _this), /*#__PURE__*/_jsxDEV(Text, {\n        children: workout.workoutDt.slice(0, 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: workout.workoutType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, _this), workout === null || workout === void 0 ? void 0 : (_workout$workoutDetai = workout.workoutDetails) === null || _workout$workoutDetai === void 0 ? void 0 : _workout$workoutDetai.map(function (d) {\n          return !d ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: [\" \", exoIdtoExoDesc[d.exoId], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, _this), d.exoDetail.map(function (e) {\n              return !e ? null : /*#__PURE__*/_jsxDEV(Text, {\n                children: [\" \", e.sets, \" / \", e.weight, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, _this);\n            })]\n          }, void 0, true);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this) : null\n  }, void 0, false);\n};\n\n_s(DaySection, \"6hkCGRnhztd56FHVAjEpugWkZhE=\", false, function () {\n  return [useApolloClient, useExoQuery, useDeleteWorkoutMutation];\n});\n\n_c = DaySection;\n\nvar _c;\n\n$RefreshReg$(_c, \"DaySection\");","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/components/DaySection.tsx"],"names":["React","Box","Button","IconButton","Text","useApolloClient","useDeleteWorkoutMutation","useExoQuery","DaySection","workout","apolloClient","exo","data","deleteWorkout","exoIdtoExoDesc","forEach","e","id","exoDesc","console","log","variables","errors","resetStore","workoutDt","slice","workoutType","workoutDetails","map","d","exoId","exoDetail","sets","weight"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,EAA4BC,UAA5B,EAA8CC,IAA9C,QAAyD,iBAAzD;AAEA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAAgCC,wBAAhC,EAA0DC,WAA1D,QAA4E,sBAA5E;AAMA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAE/C;AAAA;;AAAA;;AAAA,MADJC,OACI,QADJA,OACI;AAEJ,MAAMC,YAAY,GAAGL,eAAe,EAApC;;AAFI,qBAGgBE,WAAW,EAH3B;AAAA,MAGSI,GAHT,gBAGGC,IAHH;;AAAA,8BAIoBN,wBAAwB,EAJ5C;AAAA;AAAA,MAIGO,aAJH;;AAMJ,MAAMC,cAAsC,GAAG,EAA/C;AACAH,EAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,wBAAAA,GAAG,CAAEA,GAAL,sDAAUI,OAAV,CAAkB,UAACC,CAAD,EAAO;AACvBF,IAAAA,cAAc,CAACE,CAAC,CAACC,EAAH,CAAd,GAAuBD,CAAC,CAACE,OAAzB;AACD,GAFD;AAIA,sBACE;AAAA,cACCT,OAAO,gBACN,QAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAW,MAAA,MAAM,EAAC,IAAlB;AAAuB,MAAA,WAAW,EAAC,KAAnC;AAAA,8BACD,QAAC,UAAD;AAAY,QAAA,EAAE,EAAEP,MAAhB;AAAwB,QAAA,IAAI,EAAC,QAA7B;AAAsC,sBAAW,gBAAjD;AAAkE,QAAA,OAAO,wEAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzEiB,kBAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AADyE;AAAA,yBAEhDI,aAAa,CAAC;AAAEQ,oBAAAA,SAAS,EAAE;AAACJ,sBAAAA,EAAE,EAAER,OAAO,CAACQ;AAAb;AAAb,mBAAD,CAFmC;;AAAA;AAAA;AAEjEK,kBAAAA,MAFiE,wBAEjEA,MAFiE;;AAAA,sBAGjEA,MAHiE;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAI9DZ,YAAY,CAACa,UAAb,EAJ8D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;AAAzE;AAAA;AAAA;AAAA;AAAA,eADC,eAQI,QAAC,IAAD;AAAA,kBAAOd,OAAO,CAACe,SAAR,CAAkBC,KAAlB,CAAwB,CAAxB,EAA0B,EAA1B;AAAP;AAAA;AAAA;AAAA;AAAA,eARJ,eASI,QAAC,GAAD;AAAA,gCACE,QAAC,IAAD;AAAA,oBACGhB,OAAO,CAACiB;AADX;AAAA;AAAA;AAAA;AAAA,iBADF,EAIGjB,OAJH,aAIGA,OAJH,gDAIGA,OAAO,CAAEkB,cAJZ,0DAIG,sBAAyBC,GAAzB,CAA6B,UAACC,CAAD;AAAA,iBAC7B,CAACA,CAAD,GAAK,IAAL,gBACG;AAAA,oCACA,QAAC,IAAD;AAAA,8BAAQf,cAAc,CAACe,CAAC,CAACC,KAAH,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAECD,CAAC,CAACE,SAAF,CAAYH,GAAZ,CAAgB,UAACZ,CAAD;AAAA,qBACjB,CAACA,CAAD,GAAK,IAAL,gBACI,QAAC,IAAD;AAAA,gCAAQA,CAAC,CAACgB,IAAV,SAAmBhB,CAAC,CAACiB,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFa;AAAA,aAAhB,CAFD;AAAA,0BAF0B;AAAA,SAA7B,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,eATJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADM,GA4BJ;AA7BJ,mBADF;AAkCD,CA/CM;;GAAMzB,U;UAIUH,e,EACDE,W,EACID,wB;;;KANbE,U","sourcesContent":["import React from \"react\";\nimport { Box, Button, Flex, IconButton, Link, Text} from \"@chakra-ui/core\";\nimport NextLink from \"next/link\";\nimport { useApolloClient } from \"@apollo/client\";\nimport {RegularWorkoutFragment, useDeleteWorkoutMutation, useExoQuery} from \"../generated/graphql\";\n\ninterface DaySectionProps {\n  workout: RegularWorkoutFragment;\n}\n\nexport const DaySection: React.FC<DaySectionProps> = ({\n  workout\n}) => {\n\n  const apolloClient = useApolloClient();\n  const {data: exo} = useExoQuery();\n  const [deleteWorkout] = useDeleteWorkoutMutation();\n\n  const exoIdtoExoDesc: Record<number, string> = {};\n  exo?.exo?.forEach((e) => {\n    exoIdtoExoDesc[e.id] = e.exoDesc;\n  });\n\n  return (\n    <>\n    {workout ? (\n      <Box p={5} shadow=\"md\" borderWidth=\"1px\">\n     <IconButton as={Button} icon=\"delete\" aria-label=\"Delete Workout\" onClick={async () => {\n       console.log(workout)\n       const { errors } = await deleteWorkout({ variables: {id: workout.id }});\n          if (!errors) {\n            await apolloClient.resetStore();\n          }\n     }} />\n          <Text>{workout.workoutDt.slice(0,10)}</Text>\n          <Box>\n            <Text>\n              {workout.workoutType}\n            </Text>\n            {workout?.workoutDetails?.map((d) =>\n             !d ? null : (\n                <>\n                <Text> {exoIdtoExoDesc[d.exoId]} </Text>\n                {d.exoDetail.map((e) => \n                !e ? null : (\n                    <Text> {e.sets} / {e.weight} </Text>\n                    )\n                )}\n                </>\n                )\n            )}\n          </Box>\n      </Box>\n    ) : null\n    }\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}