{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/pages/template.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { IconButton, Box, Button, Flex, Select, Textarea, FormLabel, FormControl } from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport { useCreateTemplateMutation, useEditTemplateMutation, useExoQuery, useTemplatesQuery } from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\nimport * as yup from \"yup\";\nvar validationSchema = yup.object({\n  templateDetails: yup.array().of(yup.object({\n    exoDetail: yup.array().of(yup.object({\n      sets: yup.number().integer().positive().required(\"Nb sets is required\"),\n      reps: yup.number().integer().positive().required(\"Nb reps is required\"),\n      weight: yup.number().positive().required(\"Weight is required\"),\n      grade: yup.number().positive().max(10).required(\"Grade is required\")\n    }))\n  }))\n});\n\nvar CreateTemplate = function CreateTemplate(_ref) {\n  _s();\n\n  var _exo$exo, _templates$templates, _templates$templates$2, _templates$templates$3;\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  useIsAuth();\n\n  var _useCreateTemplateMut = useCreateTemplateMutation(),\n      _useCreateTemplateMut2 = _slicedToArray(_useCreateTemplateMut, 1),\n      createTemplate = _useCreateTemplateMut2[0];\n\n  var _useEditTemplateMutat = useEditTemplateMutation(),\n      _useEditTemplateMutat2 = _slicedToArray(_useEditTemplateMutat, 1),\n      editTemplate = _useEditTemplateMutat2[0];\n\n  var _useTemplatesQuery = useTemplatesQuery(),\n      templates = _useTemplatesQuery.data;\n\n  var _useExoQuery = useExoQuery(),\n      exo = _useExoQuery.data;\n\n  var _useState = useState(\"create\"),\n      templateFct = _useState[0],\n      setTemplateFct = _useState[1];\n\n  var _useState2 = useState(0),\n      templateId = _useState2[0],\n      setTemplateId = _useState2[1];\n\n  var _useState3 = useState([]),\n      templateDetailsClean = _useState3[0],\n      setTemplateDetailsClean = _useState3[1];\n\n  var exoItems = exo === null || exo === void 0 ? void 0 : (_exo$exo = exo.exo) === null || _exo$exo === void 0 ? void 0 : _exo$exo.map(function (e) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: e.id,\n      children: e.exoDesc\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this);\n  });\n  var templatesName = templates === null || templates === void 0 ? void 0 : (_templates$templates = templates.templates) === null || _templates$templates === void 0 ? void 0 : _templates$templates.map(function (t) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: t.id,\n      children: t.name\n    }, t.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, _this);\n  });\n  useEffect(function () {}, [templateFct, templateId, templateDetailsClean]);\n\n  var changeTemplate = function changeTemplate(t) {\n    if (t.target.value == \"0\") {\n      setTemplateFct(\"create\");\n      setTemplateId(0);\n      setTemplateDetailsClean([]);\n    } else {\n      var _templates$templates$;\n\n      setTemplateFct(\"update\");\n      setTemplateId(t.target.value);\n      setTemplateDetailsClean(templates === null || templates === void 0 ? void 0 : (_templates$templates$ = templates.templates[t.target.value]) === null || _templates$templates$ === void 0 ? void 0 : _templates$templates$.templateDetails.map(function (td) {\n        return {\n          exoId: \"\" + td.exoId,\n          exoDetail: td.exoDetail.map(function (e) {\n            return {\n              sets: e.sets,\n              reps: e.reps,\n              weight: e.weight,\n              grade: e.grade,\n              rest: e.rest,\n              feedback: e.feedback\n            };\n          })\n        };\n      }));\n    }\n  };\n\n  console.log(templates);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    variant: \"regular\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: templateFct === \"create\" ? {\n        templateType: \"\",\n        name: \"\",\n        templateDetails: []\n      } : {\n        templateType: templates === null || templates === void 0 ? void 0 : (_templates$templates$2 = templates.templates[templateId]) === null || _templates$templates$2 === void 0 ? void 0 : _templates$templates$2.templateType,\n        name: templates === null || templates === void 0 ? void 0 : (_templates$templates$3 = templates.templates[templateId]) === null || _templates$templates$3 === void 0 ? void 0 : _templates$templates$3.name,\n        templateDetails: templateDetailsClean\n      },\n      validationSchema: validationSchema,\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(templateFct === \"create\")) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return createTemplate({\n                    variables: {\n                      options: values\n                    },\n                    update: function update(cache) {\n                      cache.evict({\n                        fieldName: \"templates:{}\"\n                      });\n                    }\n                  });\n\n                case 3:\n                  _context.next = 7;\n                  break;\n\n                case 5:\n                  _context.next = 7;\n                  return editTemplate({\n                    variables: {\n                      id: templateId,\n                      options: values\n                    },\n                    update: function update(cache) {\n                      cache.evict({\n                        fieldName: \"templates:{}\"\n                      });\n                    }\n                  });\n\n                case 7:\n                  router.push(\"/\");\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref3) {\n        var _templates$templates2;\n\n        var isSubmitting = _ref3.isSubmitting,\n            values = _ref3.values;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              name: \"templateType\",\n              placeholder: \"Template Type\",\n              label: \"Template Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"name\",\n              placeholder: \"Template name\",\n              label: \"Template name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, _this), (templates === null || templates === void 0 ? void 0 : (_templates$templates2 = templates.templates) === null || _templates$templates2 === void 0 ? void 0 : _templates$templates2.length) !== 0 ? /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"templatesName\",\n                children: \"Template List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Field, {\n                as: Select,\n                name: \"templatesName\",\n                label: \"Template List\",\n                type: \"select\",\n                onChange: changeTemplate,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\"\n                }, \"0\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, _this), templatesName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, _this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(FieldArray, {\n            name: \"templateDetails\",\n            children: function children(arrayHelpers) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: function onClick() {\n                    return arrayHelpers.push({\n                      exoId: \"\",\n                      exoDetail: [{\n                        sets: \"\",\n                        reps: \"\",\n                        weight: \"\",\n                        grade: \"\",\n                        rest: 0,\n                        feedback: \"\"\n                      }]\n                    });\n                  },\n                  children: \"add exercise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, _this), values.templateDetails.map(function (unitExo, index) {\n                  return /*#__PURE__*/_jsxDEV(Box, {\n                    children: [/*#__PURE__*/_jsxDEV(Flex, {\n                      children: [/*#__PURE__*/_jsxDEV(Field, {\n                        as: Select,\n                        name: \"templateDetails.\".concat(index, \".exoId\"),\n                        type: \"select\",\n                        children: exoItems\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 27\n                      }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                        as: Button,\n                        icon: \"delete\",\n                        \"aria-label\": \"Delete exercise\",\n                        onClick: function onClick() {\n                          return arrayHelpers.remove(index);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 27\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n                      children: /*#__PURE__*/_jsxDEV(FieldArray, {\n                        name: \"exoDetail\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: unitExo.exoDetail.map(function (_unitExoDetail, exoIndex) {\n                            return /*#__PURE__*/_jsxDEV(Flex, {\n                              children: [/*#__PURE__*/_jsxDEV(InputField, {\n                                name: \"templateDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".sets\"),\n                                placeholder: \"sets\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 222,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                name: \"templateDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".reps\"),\n                                placeholder: \"reps\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 227,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                name: \"templateDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".weight\"),\n                                placeholder: \"weight\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 232,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                name: \"templateDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".grade\"),\n                                placeholder: \"grade\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 237,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                name: \"templateDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".rest\"),\n                                placeholder: \"rest\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 242,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                as: Textarea,\n                                name: \"templateDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".feedback\"),\n                                placeholder: \"feedback\",\n                                textarea: true\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 247,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                                as: Button,\n                                icon: \"delete\",\n                                \"aria-label\": \"Delete Exo Detail\",\n                                onClick: function onClick() {\n                                  unitExo.exoDetail.splice(exoIndex, 1);\n                                  arrayHelpers.replace(index, unitExo);\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 253,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                                as: Button,\n                                icon: \"add\",\n                                \"aria-label\": \"Add Exo Detail\",\n                                onClick: function onClick() {\n                                  unitExo.exoDetail.splice(exoIndex + 1, 0, {\n                                    sets: \"\",\n                                    reps: \"\",\n                                    weight: \"\",\n                                    grade: \"\",\n                                    rest: 0,\n                                    feedback: \"\"\n                                  });\n                                  arrayHelpers.replace(index, unitExo);\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 262,\n                                columnNumber: 39\n                              }, _this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 221,\n                              columnNumber: 37\n                            }, _this);\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 217,\n                          columnNumber: 29\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 27\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 25\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 23\n                  }, _this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, _this), templateFct === \"create\" ? /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            isLoading: isSubmitting,\n            variantColor: \"teal\",\n            children: \"create template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, _this) : /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            isLoading: isSubmitting,\n            variantColor: \"teal\",\n            children: \"update template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateTemplate, \"zMxMmFgv4DLOKgZZ5l4YzbSsIEg=\", false, function () {\n  return [useRouter, useIsAuth, useCreateTemplateMutation, useEditTemplateMutation, useTemplatesQuery, useExoQuery];\n});\n\n_c = CreateTemplate;\nexport default withApollo({\n  ssr: false\n})(CreateTemplate);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTemplate\");","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/pages/template.tsx"],"names":["IconButton","Box","Button","Flex","Select","Textarea","FormLabel","FormControl","Field","FieldArray","Form","Formik","useRouter","React","useEffect","useState","InputField","Layout","useCreateTemplateMutation","useEditTemplateMutation","useExoQuery","useTemplatesQuery","useIsAuth","withApollo","yup","validationSchema","object","templateDetails","array","of","exoDetail","sets","number","integer","positive","required","reps","weight","grade","max","CreateTemplate","router","createTemplate","editTemplate","templates","data","exo","templateFct","setTemplateFct","templateId","setTemplateId","templateDetailsClean","setTemplateDetailsClean","exoItems","map","e","id","exoDesc","templatesName","t","name","changeTemplate","target","value","td","exoId","rest","feedback","console","log","templateType","values","variables","options","update","cache","evict","fieldName","push","isSubmitting","length","arrayHelpers","unitExo","index","remove","_unitExoDetail","exoIndex","splice","replace","ssr"],"mappings":";;;;;;;;;;AAAA,SACEA,UADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,QANF,EAOEC,SAPF,EAQEC,WARF,QASO,iBATP;AAUA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,IAA5B,EAAkCC,MAAlC,QAAgD,QAAhD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAEEC,yBAFF,EAGEC,uBAHF,EAIEC,WAJF,EAMEC,iBANF,QAOO,sBAPP;AAQA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAGA,IAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,CAAW;AAClCC,EAAAA,eAAe,EAAEH,GAAG,CAACI,KAAJ,GAAYC,EAAZ,CACfL,GAAG,CAACE,MAAJ,CAAW;AACTI,IAAAA,SAAS,EAAEN,GAAG,CAACI,KAAJ,GAAYC,EAAZ,CACTL,GAAG,CAACE,MAAJ,CAAW;AACTK,MAAAA,IAAI,EAAEP,GAAG,CACNQ,MADG,GAEHC,OAFG,GAGHC,QAHG,GAIHC,QAJG,CAIM,qBAJN,CADG;AAMTC,MAAAA,IAAI,EAAEZ,GAAG,CACNQ,MADG,GAEHC,OAFG,GAGHC,QAHG,GAIHC,QAJG,CAIM,qBAJN,CANG;AAWTE,MAAAA,MAAM,EAAEb,GAAG,CAACQ,MAAJ,GAAaE,QAAb,GAAwBC,QAAxB,CAAiC,oBAAjC,CAXC;AAYTG,MAAAA,KAAK,EAAEd,GAAG,CAACQ,MAAJ,GAAaE,QAAb,GAAwBK,GAAxB,CAA4B,EAA5B,EAAgCJ,QAAhC,CAAyC,mBAAzC;AAZE,KAAX,CADS;AADF,GAAX,CADe;AADiB,CAAX,CAAzB;;AAuBA,IAAMK,cAA4B,GAAG,SAA/BA,cAA+B,OAAQ;AAAA;;AAAA;;AAAA;;AAC3C,MAAMC,MAAM,GAAG7B,SAAS,EAAxB;AACAU,EAAAA,SAAS;;AAFkC,8BAGlBJ,yBAAyB,EAHP;AAAA;AAAA,MAGpCwB,cAHoC;;AAAA,8BAIpBvB,uBAAuB,EAJH;AAAA;AAAA,MAIpCwB,YAJoC;;AAAA,2BAKftB,iBAAiB,EALF;AAAA,MAK7BuB,SAL6B,sBAKnCC,IALmC;;AAAA,qBAMrBzB,WAAW,EANU;AAAA,MAM7B0B,GAN6B,gBAMnCD,IANmC;;AAAA,kBAOL9B,QAAQ,CAAsB,QAAtB,CAPH;AAAA,MAOpCgC,WAPoC;AAAA,MAOvBC,cAPuB;;AAAA,mBAQPjC,QAAQ,CAAS,CAAT,CARD;AAAA,MAQpCkC,UARoC;AAAA,MAQxBC,aARwB;;AAAA,mBASanC,QAAQ,CAE9D,EAF8D,CATrB;AAAA,MASpCoC,oBAToC;AAAA,MASdC,uBATc;;AAY3C,MAAMC,QAAQ,GAAGP,GAAH,aAAGA,GAAH,mCAAGA,GAAG,CAAEA,GAAR,6CAAG,SAAUQ,GAAV,CAAc,UAACC,CAAD,EAAO;AACpC,wBACE;AAAQ,MAAA,KAAK,EAAEA,CAAC,CAACC,EAAjB;AAAA,gBACGD,CAAC,CAACE;AADL,OAA0BF,CAAC,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,aADF;AAKD,GANgB,CAAjB;AAOA,MAAME,aAAa,GAAGd,SAAH,aAAGA,SAAH,+CAAGA,SAAS,CAAEA,SAAd,yDAAG,qBAAsBU,GAAtB,CAA0B,UAACK,CAAD,EAAO;AACrD,wBACE;AAAQ,MAAA,KAAK,EAAEA,CAAC,CAACH,EAAjB;AAAA,gBACGG,CAAC,CAACC;AADL,OAA0BD,CAAC,CAACH,EAA5B;AAAA;AAAA;AAAA;AAAA,aADF;AAKD,GANqB,CAAtB;AAQA1C,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,CAACiC,WAAD,EAAcE,UAAd,EAA0BE,oBAA1B,CAAX,CAAT;;AAEA,MAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAACF,CAAD,EAAO;AAC5B,QAAIA,CAAC,CAACG,MAAF,CAASC,KAAT,IAAkB,GAAtB,EAA2B;AACzBf,MAAAA,cAAc,CAAC,QAAD,CAAd;AACAE,MAAAA,aAAa,CAAC,CAAD,CAAb;AACAE,MAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACD,KAJD,MAIO;AAAA;;AACLJ,MAAAA,cAAc,CAAC,QAAD,CAAd;AACAE,MAAAA,aAAa,CAACS,CAAC,CAACG,MAAF,CAASC,KAAV,CAAb;AACAX,MAAAA,uBAAuB,CACrBR,SADqB,aACrBA,SADqB,gDACrBA,SAAS,CAAEA,SAAX,CAAqBe,CAAC,CAACG,MAAF,CAASC,KAA9B,CADqB,0DACrB,sBAAsCpC,eAAtC,CAAsD2B,GAAtD,CAA0D,UAACU,EAAD,EAAQ;AAChE,eAAO;AACLC,UAAAA,KAAK,EAAE,KAAKD,EAAE,CAACC,KADV;AAELnC,UAAAA,SAAS,EAAEkC,EAAE,CAAClC,SAAH,CAAawB,GAAb,CAAiB,UAACC,CAAD,EAAO;AACjC,mBAAO;AACLxB,cAAAA,IAAI,EAAEwB,CAAC,CAACxB,IADH;AAELK,cAAAA,IAAI,EAAEmB,CAAC,CAACnB,IAFH;AAGLC,cAAAA,MAAM,EAAEkB,CAAC,CAAClB,MAHL;AAILC,cAAAA,KAAK,EAAEiB,CAAC,CAACjB,KAJJ;AAKL4B,cAAAA,IAAI,EAAEX,CAAC,CAACW,IALH;AAMLC,cAAAA,QAAQ,EAAEZ,CAAC,CAACY;AANP,aAAP;AAQD,WATU;AAFN,SAAP;AAaD,OAdD,CADqB,CAAvB;AAiBD;AACF,GA1BD;;AA2BAC,EAAAA,OAAO,CAACC,GAAR,CAAYzB,SAAZ;AAEA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EACXG,WAAW,KAAK,QAAhB,GACI;AACEuB,QAAAA,YAAY,EAAE,EADhB;AAEEV,QAAAA,IAAI,EAAE,EAFR;AAGEjC,QAAAA,eAAe,EAAE;AAHnB,OADJ,GAMI;AACE2C,QAAAA,YAAY,EAAE1B,SAAF,aAAEA,SAAF,iDAAEA,SAAS,CAAEA,SAAX,CAAqBK,UAArB,CAAF,2DAAE,uBAAkCqB,YADlD;AAEEV,QAAAA,IAAI,EAAEhB,SAAF,aAAEA,SAAF,iDAAEA,SAAS,CAAEA,SAAX,CAAqBK,UAArB,CAAF,2DAAE,uBAAkCW,IAF1C;AAGEjC,QAAAA,eAAe,EAAEwB;AAHnB,OARR;AAcE,MAAA,gBAAgB,EAAE1B,gBAdpB;AAeE,MAAA,QAAQ;AAAA,6EAAE,iBAAO8C,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA,wBACJxB,WAAW,KAAK,QADZ;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAEAL,cAAc,CAAC;AACnB8B,oBAAAA,SAAS,EAAE;AAAEC,sBAAAA,OAAO,EAAEF;AAAX,qBADQ;AAEnBG,oBAAAA,MAAM,EAAE,gBAACC,KAAD,EAAW;AACjBA,sBAAAA,KAAK,CAACC,KAAN,CAAY;AAAEC,wBAAAA,SAAS,EAAE;AAAb,uBAAZ;AACD;AAJkB,mBAAD,CAFd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,yBASAlC,YAAY,CAAC;AACjB6B,oBAAAA,SAAS,EAAE;AAAEhB,sBAAAA,EAAE,EAAEP,UAAN;AAAkBwB,sBAAAA,OAAO,EAAEF;AAA3B,qBADM;AAEjBG,oBAAAA,MAAM,EAAE,gBAACC,KAAD,EAAW;AACjBA,sBAAAA,KAAK,CAACC,KAAN,CAAY;AAAEC,wBAAAA,SAAS,EAAE;AAAb,uBAAZ;AACD;AAJgB,mBAAD,CATZ;;AAAA;AAgBRpC,kBAAAA,MAAM,CAACqC,IAAP,CAAY,GAAZ;;AAhBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAfV;AAAA,gBAkCG;AAAA;;AAAA,YAAGC,YAAH,SAAGA,YAAH;AAAA,YAAiBR,MAAjB,SAAiBA,MAAjB;AAAA,4BACC,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD;AAAA,oCACE,QAAC,UAAD;AACE,cAAA,IAAI,EAAC,cADP;AAEE,cAAA,WAAW,EAAC,eAFd;AAGE,cAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,qBADF,eAME,QAAC,UAAD;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,eAFd;AAGE,cAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,qBANF,EAWG,CAAA3B,SAAS,SAAT,IAAAA,SAAS,WAAT,qCAAAA,SAAS,CAAEA,SAAX,gFAAsBoC,MAAtB,MAAiC,CAAjC,gBACC,QAAC,WAAD;AAAA,sCACE,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,QAAC,KAAD;AACE,gBAAA,EAAE,EAAE5E,MADN;AAEE,gBAAA,IAAI,EAAC,eAFP;AAGE,gBAAA,KAAK,EAAC,eAHR;AAIE,gBAAA,IAAI,EAAC,QAJP;AAKE,gBAAA,QAAQ,EAAEyD,cALZ;AAAA,wCAOE;AAAQ,kBAAA,KAAK,EAAC;AAAd,mBAAsB,GAAtB;AAAA;AAAA;AAAA;AAAA,yBAPF,EAQGH,aARH;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,GAcG,IAzBN;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eA4BE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,iBAAjB;AAAA,sBACG,kBAACuB,YAAD;AAAA,kCACC;AAAA,wCACE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAE;AAAA,2BACPA,YAAY,CAACH,IAAb,CAAkB;AAChBb,sBAAAA,KAAK,EAAE,EADS;AAEhBnC,sBAAAA,SAAS,EAAE,CACT;AACEC,wBAAAA,IAAI,EAAE,EADR;AAEEK,wBAAAA,IAAI,EAAE,EAFR;AAGEC,wBAAAA,MAAM,EAAE,EAHV;AAIEC,wBAAAA,KAAK,EAAE,EAJT;AAKE4B,wBAAAA,IAAI,EAAE,CALR;AAMEC,wBAAAA,QAAQ,EAAE;AANZ,uBADS;AAFK,qBAAlB,CADO;AAAA,mBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAoBGI,MAAM,CAAC5C,eAAP,CAAuB2B,GAAvB,CAA2B,UAAC4B,OAAD,EAAUC,KAAV,EAAoB;AAC9C,sCACE,QAAC,GAAD;AAAA,4CACE,QAAC,IAAD;AAAA,8CACE,QAAC,KAAD;AACE,wBAAA,EAAE,EAAE/E,MADN;AAEE,wBAAA,IAAI,4BAAqB+E,KAArB,WAFN;AAGE,wBAAA,IAAI,EAAC,QAHP;AAAA,kCAKG9B;AALH;AAAA;AAAA;AAAA;AAAA,+BADF,eAQE,QAAC,UAAD;AACE,wBAAA,EAAE,EAAEnD,MADN;AAEE,wBAAA,IAAI,EAAC,QAFP;AAGE,sCAAW,iBAHb;AAIE,wBAAA,OAAO,EAAE;AAAA,iCAAM+E,YAAY,CAACG,MAAb,CAAoBD,KAApB,CAAN;AAAA;AAJX;AAAA;AAAA;AAAA;AAAA,+BARF;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAgBE,QAAC,IAAD;AAAA,6CACE,QAAC,UAAD;AAAY,wBAAA,IAAI,EAAC,WAAjB;AAAA,+CACE;AAAA,oCACGD,OAAO,CAACpD,SAAR,CAAkBwB,GAAlB,CACC,UAAC+B,cAAD,EAAiBC,QAAjB,EAA8B;AAC5B,gDACE,QAAC,IAAD;AAAA,sDACE,QAAC,UAAD;AACE,gCAAA,IAAI,4BAAqBH,KAArB,wBAAwCG,QAAxC,UADN;AAEE,gCAAA,WAAW,EAAC,MAFd;AAGE,gCAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,uCADF,eAME,QAAC,UAAD;AACE,gCAAA,IAAI,4BAAqBH,KAArB,wBAAwCG,QAAxC,UADN;AAEE,gCAAA,WAAW,EAAC,MAFd;AAGE,gCAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,uCANF,eAWE,QAAC,UAAD;AACE,gCAAA,IAAI,4BAAqBH,KAArB,wBAAwCG,QAAxC,YADN;AAEE,gCAAA,WAAW,EAAC,QAFd;AAGE,gCAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,uCAXF,eAgBE,QAAC,UAAD;AACE,gCAAA,IAAI,4BAAqBH,KAArB,wBAAwCG,QAAxC,WADN;AAEE,gCAAA,WAAW,EAAC,OAFd;AAGE,gCAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,uCAhBF,eAqBE,QAAC,UAAD;AACE,gCAAA,IAAI,4BAAqBH,KAArB,wBAAwCG,QAAxC,UADN;AAEE,gCAAA,WAAW,EAAC,MAFd;AAGE,gCAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,uCArBF,eA0BE,QAAC,UAAD;AACE,gCAAA,EAAE,EAAEjF,QADN;AAEE,gCAAA,IAAI,4BAAqB8E,KAArB,wBAAwCG,QAAxC,cAFN;AAGE,gCAAA,WAAW,EAAC,UAHd;AAIE,gCAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,uCA1BF,eAgCE,QAAC,UAAD;AACE,gCAAA,EAAE,EAAEpF,MADN;AAEE,gCAAA,IAAI,EAAC,QAFP;AAGE,8CAAW,mBAHb;AAIE,gCAAA,OAAO,EAAE,mBAAM;AACbgF,kCAAAA,OAAO,CAACpD,SAAR,CAAkByD,MAAlB,CAAyBD,QAAzB,EAAmC,CAAnC;AACAL,kCAAAA,YAAY,CAACO,OAAb,CAAqBL,KAArB,EAA4BD,OAA5B;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,uCAhCF,eAyCE,QAAC,UAAD;AACE,gCAAA,EAAE,EAAEhF,MADN;AAEE,gCAAA,IAAI,EAAC,KAFP;AAGE,8CAAW,gBAHb;AAIE,gCAAA,OAAO,EAAE,mBAAM;AACbgF,kCAAAA,OAAO,CAACpD,SAAR,CAAkByD,MAAlB,CACED,QAAQ,GAAG,CADb,EAEE,CAFF,EAGE;AACEvD,oCAAAA,IAAI,EAAE,EADR;AAEEK,oCAAAA,IAAI,EAAE,EAFR;AAGEC,oCAAAA,MAAM,EAAE,EAHV;AAIEC,oCAAAA,KAAK,EAAE,EAJT;AAKE4B,oCAAAA,IAAI,EAAE,CALR;AAMEC,oCAAAA,QAAQ,EAAE;AANZ,mCAHF;AAYAc,kCAAAA,YAAY,CAACO,OAAb,CAAqBL,KAArB,EAA4BD,OAA5B;AACD;AAlBH;AAAA;AAAA;AAAA;AAAA,uCAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF;AAgED,2BAlEF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,6BAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF;AA6FD,iBA9FA,CApBH;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,mBA5BF,EAoJGnC,WAAW,KAAK,QAAhB,gBACC,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,SAAS,EAAEgC,YAHb;AAIE,YAAA,YAAY,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,gBAUC,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,SAAS,EAAEA,YAHb;AAIE,YAAA,YAAY,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA9JJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD;AAAA;AAlCH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAiND,CA3QD;;GAAMvC,c;UACW5B,S,EACfU,S,EACyBJ,yB,EACFC,uB,EACKE,iB,EACND,W;;;KANlBoB,c;AA6QN,eAAejB,UAAU,CAAC;AAAEkE,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2BjD,cAA3B,CAAf","sourcesContent":["import {\n  IconButton,\n  Box,\n  Button,\n  Flex,\n  Select,\n  Textarea,\n  FormLabel,\n  FormControl,\n} from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport {\n  TemplateDetailInput,\n  useCreateTemplateMutation,\n  useEditTemplateMutation,\n  useExoQuery,\n  useTemplateQuery,\n  useTemplatesQuery,\n} from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\nimport * as yup from \"yup\";\nimport changeTemplate from \"../utils/changeTemplate\";\n\nconst validationSchema = yup.object({\n  templateDetails: yup.array().of(\n    yup.object({\n      exoDetail: yup.array().of(\n        yup.object({\n          sets: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb sets is required\"),\n          reps: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb reps is required\"),\n          weight: yup.number().positive().required(\"Weight is required\"),\n          grade: yup.number().positive().max(10).required(\"Grade is required\"),\n        })\n      ),\n    })\n  ),\n});\n\nconst CreateTemplate: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  useIsAuth();\n  const [createTemplate] = useCreateTemplateMutation();\n  const [editTemplate] = useEditTemplateMutation();\n  const { data: templates } = useTemplatesQuery();\n  const { data: exo } = useExoQuery();\n  const [templateFct, setTemplateFct] = useState<\"create\" | \"update\">(\"create\");\n  const [templateId, setTemplateId] = useState<number>(0);\n  const [templateDetailsClean, setTemplateDetailsClean] = useState<\n    [TemplateDetailInput]\n  >([]);\n  const exoItems = exo?.exo?.map((e) => {\n    return (\n      <option value={e.id} key={e.id}>\n        {e.exoDesc}\n      </option>\n    );\n  });\n  const templatesName = templates?.templates?.map((t) => {\n    return (\n      <option value={t.id} key={t.id}>\n        {t.name}\n      </option>\n    );\n  });\n\n  useEffect(() => {}, [templateFct, templateId, templateDetailsClean]);\n\n  const changeTemplate = (t) => {\n    if (t.target.value == \"0\") {\n      setTemplateFct(\"create\");\n      setTemplateId(0);\n      setTemplateDetailsClean([]);\n    } else {\n      setTemplateFct(\"update\");\n      setTemplateId(t.target.value);\n      setTemplateDetailsClean(\n        templates?.templates[t.target.value]?.templateDetails.map((td) => {\n          return {\n            exoId: \"\" + td.exoId,\n            exoDetail: td.exoDetail.map((e) => {\n              return {\n                sets: e.sets,\n                reps: e.reps,\n                weight: e.weight,\n                grade: e.grade,\n                rest: e.rest,\n                feedback: e.feedback,\n              };\n            }),\n          };\n        })\n      );\n    }\n  };\n  console.log(templates);\n\n  return (\n    <Layout variant=\"regular\">\n      <Formik\n        initialValues={\n          templateFct === \"create\"\n            ? {\n                templateType: \"\",\n                name: \"\",\n                templateDetails: [],\n              }\n            : {\n                templateType: templates?.templates[templateId]?.templateType,\n                name: templates?.templates[templateId]?.name,\n                templateDetails: templateDetailsClean,\n              }\n        }\n        validationSchema={validationSchema}\n        onSubmit={async (values) => {\n          if (templateFct === \"create\") {\n            await createTemplate({\n              variables: { options: values },\n              update: (cache) => {\n                cache.evict({ fieldName: \"templates:{}\" });\n              },\n            });\n          } else {\n            await editTemplate({\n              variables: { id: templateId, options: values },\n              update: (cache) => {\n                cache.evict({ fieldName: \"templates:{}\" });\n              },\n            });\n          }\n          router.push(\"/\");\n        }}\n      >\n        {({ isSubmitting, values }) => (\n          <Form>\n            <Flex>\n              <InputField\n                name=\"templateType\"\n                placeholder=\"Template Type\"\n                label=\"Template Type\"\n              />\n              <InputField\n                name=\"name\"\n                placeholder=\"Template name\"\n                label=\"Template name\"\n              />\n              {templates?.templates?.length !== 0 ? (\n                <FormControl>\n                  <FormLabel htmlFor=\"templatesName\">Template List</FormLabel>\n                  <Field\n                    as={Select}\n                    name=\"templatesName\"\n                    label=\"Template List\"\n                    type=\"select\"\n                    onChange={changeTemplate}\n                  >\n                    <option value=\"0\" key=\"0\"></option>\n                    {templatesName}\n                  </Field>\n                </FormControl>\n              ) : null}\n            </Flex>\n            <FieldArray name=\"templateDetails\">\n              {(arrayHelpers) => (\n                <div>\n                  <Button\n                    onClick={() =>\n                      arrayHelpers.push({\n                        exoId: \"\",\n                        exoDetail: [\n                          {\n                            sets: \"\",\n                            reps: \"\",\n                            weight: \"\",\n                            grade: \"\",\n                            rest: 0,\n                            feedback: \"\",\n                          },\n                        ],\n                      })\n                    }\n                  >\n                    add exercise\n                  </Button>\n                  {values.templateDetails.map((unitExo, index) => {\n                    return (\n                      <Box>\n                        <Flex>\n                          <Field\n                            as={Select}\n                            name={`templateDetails.${index}.exoId`}\n                            type=\"select\"\n                          >\n                            {exoItems}\n                          </Field>\n                          <IconButton\n                            as={Button}\n                            icon=\"delete\"\n                            aria-label=\"Delete exercise\"\n                            onClick={() => arrayHelpers.remove(index)}\n                          />\n                        </Flex>\n                        <Flex>\n                          <FieldArray name=\"exoDetail\">\n                            <div>\n                              {unitExo.exoDetail.map(\n                                (_unitExoDetail, exoIndex) => {\n                                  return (\n                                    <Flex>\n                                      <InputField\n                                        name={`templateDetails.${index}.exoDetail.${exoIndex}.sets`}\n                                        placeholder=\"sets\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`templateDetails.${index}.exoDetail.${exoIndex}.reps`}\n                                        placeholder=\"reps\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`templateDetails.${index}.exoDetail.${exoIndex}.weight`}\n                                        placeholder=\"weight\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`templateDetails.${index}.exoDetail.${exoIndex}.grade`}\n                                        placeholder=\"grade\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`templateDetails.${index}.exoDetail.${exoIndex}.rest`}\n                                        placeholder=\"rest\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        as={Textarea}\n                                        name={`templateDetails.${index}.exoDetail.${exoIndex}.feedback`}\n                                        placeholder=\"feedback\"\n                                        textarea\n                                      />\n                                      <IconButton\n                                        as={Button}\n                                        icon=\"delete\"\n                                        aria-label=\"Delete Exo Detail\"\n                                        onClick={() => {\n                                          unitExo.exoDetail.splice(exoIndex, 1);\n                                          arrayHelpers.replace(index, unitExo);\n                                        }}\n                                      />\n                                      <IconButton\n                                        as={Button}\n                                        icon=\"add\"\n                                        aria-label=\"Add Exo Detail\"\n                                        onClick={() => {\n                                          unitExo.exoDetail.splice(\n                                            exoIndex + 1,\n                                            0,\n                                            {\n                                              sets: \"\",\n                                              reps: \"\",\n                                              weight: \"\",\n                                              grade: \"\",\n                                              rest: 0,\n                                              feedback: \"\",\n                                            }\n                                          );\n                                          arrayHelpers.replace(index, unitExo);\n                                        }}\n                                      />\n                                    </Flex>\n                                  );\n                                }\n                              )}\n                            </div>\n                          </FieldArray>\n                        </Flex>\n                      </Box>\n                    );\n                  })}\n                </div>\n              )}\n            </FieldArray>\n            {templateFct === \"create\" ? (\n              <Button\n                mt={4}\n                type=\"submit\"\n                isLoading={isSubmitting}\n                variantColor=\"teal\"\n              >\n                create template\n              </Button>\n            ) : (\n              <Button\n                mt={4}\n                type=\"submit\"\n                isLoading={isSubmitting}\n                variantColor=\"teal\"\n              >\n                update template\n              </Button>\n            )}\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: false })(CreateTemplate);\n"]},"metadata":{},"sourceType":"module"}