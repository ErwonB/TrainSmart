{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/components/ChangeProfile.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Box, Button, FormControl, FormLabel, Select } from \"@chakra-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useApolloClient } from \"@apollo/client\";\nimport { useChangeProfileMutation } from \"../generated/graphql\";\nimport * as yup from \"yup\";\nimport { Field, Form, Formik } from \"formik\";\nimport { InputField } from \"./InputField\";\nvar validationSchema = yup.object({\n  trainingFrequency: yup.number().positive()\n});\nexport var ChangeProfile = function ChangeProfile(_ref) {\n  _s();\n\n  var profile = _ref.profile;\n  var apolloClient = useApolloClient();\n  var router = useRouter();\n\n  var _useChangeProfileMuta = useChangeProfileMutation(),\n      _useChangeProfileMuta2 = _slicedToArray(_useChangeProfileMuta, 1),\n      changeProfile = _useChangeProfileMuta2[0];\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: !profile ? {\n        lang_cd: \"\",\n        trainingFrequency: 0,\n        trainingType: \"\",\n        sex: \"\"\n      } : {\n        lang_cd: profile.lang_cd,\n        trainingType: profile.trainingType,\n        trainingFrequency: profile.trainingFrequency,\n        sex: profile.sex\n      },\n      validationSchema: validationSchema,\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return changeProfile({\n                    variables: {\n                      options: {\n                        lang_cd: values.lang_cd,\n                        trainingType: values.trainingType,\n                        trainingFrequency: values.trainingFrequency,\n                        sex: values.sex\n                      }\n                    }\n                  });\n\n                case 2:\n                  _context.next = 4;\n                  return apolloClient.resetStore();\n\n                case 4:\n                  router.push(\"/\");\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref3) {\n        var isSubmitting = _ref3.isSubmitting,\n            values = _ref3.values;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"lang_cd\",\n              children: \"Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Field, {\n              as: Select,\n              name: \"lang_cd\",\n              label: \"Language\",\n              type: \"select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"FR\",\n                children: \"FR\"\n              }, \"FR\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"EN\",\n                children: \"EN\"\n              }, \"EN\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"trainingFrequency\",\n            placeholder: \"Training Frequency\",\n            label: \"Training Frequency\",\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"trainingType\",\n            placeholder: \"Training Type\",\n            label: \"Training Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"sex\",\n              children: \"Sex\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Field, {\n              as: Select,\n              name: \"sex\",\n              label: \"Sex\",\n              type: \"select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"M\",\n                children: \"M\"\n              }, \"M\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"F\",\n                children: \"F\"\n              }, \"F\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            isLoading: isSubmitting,\n            variantColor: \"teal\",\n            children: \"change profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ChangeProfile, \"nD5h+Sh8UX84tOONU/jgopnk4/w=\", false, function () {\n  return [useApolloClient, useRouter, useChangeProfileMutation];\n});\n\n_c = ChangeProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeProfile\");","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/components/ChangeProfile.tsx"],"names":["React","Box","Button","FormControl","FormLabel","Select","useRouter","useApolloClient","useChangeProfileMutation","yup","Field","Form","Formik","InputField","validationSchema","object","trainingFrequency","number","positive","ChangeProfile","profile","apolloClient","router","changeProfile","lang_cd","trainingType","sex","values","variables","options","resetStore","push","isSubmitting"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,WAAtB,EAAmCC,SAAnC,EAA8CC,MAA9C,QAA4D,iBAA5D;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAEEC,wBAFF,QAGO,sBAHP;AAIA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,QAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAMA,IAAMC,gBAAgB,GAAGL,GAAG,CAACM,MAAJ,CAAW;AAClCC,EAAAA,iBAAiB,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb;AADe,CAAX,CAAzB;AAIA,OAAO,IAAMC,aAA2C,GAAG,SAA9CA,aAA8C,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC1E,MAAMC,YAAY,GAAGd,eAAe,EAApC;AACA,MAAMe,MAAM,GAAGhB,SAAS,EAAxB;;AAF0E,8BAGlDE,wBAAwB,EAH0B;AAAA;AAAA,MAGnEe,aAHmE;;AAK1E,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EACX,CAACH,OAAD,GACI;AAAEI,QAAAA,OAAO,EAAE,EAAX;AAAeR,QAAAA,iBAAiB,EAAE,CAAlC;AAAqCS,QAAAA,YAAY,EAAE,EAAnD;AAAuDC,QAAAA,GAAG,EAAE;AAA5D,OADJ,GAEI;AACEF,QAAAA,OAAO,EAAEJ,OAAO,CAACI,OADnB;AAEEC,QAAAA,YAAY,EAAEL,OAAO,CAACK,YAFxB;AAGET,QAAAA,iBAAiB,EAAEI,OAAO,CAACJ,iBAH7B;AAIEU,QAAAA,GAAG,EAAEN,OAAO,CAACM;AAJf,OAJR;AAWE,MAAA,gBAAgB,EAAEZ,gBAXpB;AAYE,MAAA,QAAQ;AAAA,6EAAE,iBAAOa,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACFJ,aAAa,CAAC;AAClBK,oBAAAA,SAAS,EAAE;AACTC,sBAAAA,OAAO,EAAE;AACPL,wBAAAA,OAAO,EAAEG,MAAM,CAACH,OADT;AAEPC,wBAAAA,YAAY,EAAEE,MAAM,CAACF,YAFd;AAGPT,wBAAAA,iBAAiB,EAAEW,MAAM,CAACX,iBAHnB;AAIPU,wBAAAA,GAAG,EAAEC,MAAM,CAACD;AAJL;AADA;AADO,mBAAD,CADX;;AAAA;AAAA;AAAA,yBAWFL,YAAY,CAACS,UAAb,EAXE;;AAAA;AAYRR,kBAAAA,MAAM,CAACS,IAAP,CAAY,GAAZ;;AAZQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAZV;AAAA,gBA2BG;AAAA,YAAGC,YAAH,SAAGA,YAAH;AAAA,YAAiBL,MAAjB,SAAiBA,MAAjB;AAAA,4BACC,QAAC,IAAD;AAAA,kCACE,QAAC,WAAD;AAAA,oCACE,QAAC,SAAD;AAAW,cAAA,OAAO,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,QAAC,KAAD;AAAO,cAAA,EAAE,EAAEtB,MAAX;AAAmB,cAAA,IAAI,EAAC,SAAxB;AAAkC,cAAA,KAAK,EAAC,UAAxC;AAAmD,cAAA,IAAI,EAAC,QAAxD;AAAA,sCACE;AAAQ,gBAAA,KAAK,EAAC,IAAd;AAAA;AAAA,iBAAuB,IAAvB;AAAA;AAAA;AAAA;AAAA,uBADF,eAIE;AAAQ,gBAAA,KAAK,EAAC,IAAd;AAAA;AAAA,iBAAuB,IAAvB;AAAA;AAAA;AAAA;AAAA,uBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAYE,QAAC,UAAD;AACE,YAAA,IAAI,EAAC,mBADP;AAEE,YAAA,WAAW,EAAC,oBAFd;AAGE,YAAA,KAAK,EAAC,oBAHR;AAIE,YAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,mBAZF,eAkBE,QAAC,UAAD;AACE,YAAA,IAAI,EAAC,cADP;AAEE,YAAA,WAAW,EAAC,eAFd;AAGE,YAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,mBAlBF,eAuBE,QAAC,WAAD;AAAA,oCACE,QAAC,SAAD;AAAW,cAAA,OAAO,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,QAAC,KAAD;AAAO,cAAA,EAAE,EAAEA,MAAX;AAAmB,cAAA,IAAI,EAAC,KAAxB;AAA8B,cAAA,KAAK,EAAC,KAApC;AAA0C,cAAA,IAAI,EAAC,QAA/C;AAAA,sCACE;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA,iBAAsB,GAAtB;AAAA;AAAA;AAAA;AAAA,uBADF,eAIE;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA,iBAAsB,GAAtB;AAAA;AAAA;AAAA;AAAA,uBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,mBAvBF,eAkCE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,SAAS,EAAE2B,YAHb;AAIE,YAAA,YAAY,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD;AAAA;AA3BH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AA6ED,CAlFM;;GAAMb,a;UACUZ,e,EACND,S,EACSE,wB;;;KAHbW,a","sourcesContent":["import React from \"react\";\nimport { Box, Button, FormControl, FormLabel, Select } from \"@chakra-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useApolloClient } from \"@apollo/client\";\nimport {\n  RegularProfileFragment,\n  useChangeProfileMutation,\n} from \"../generated/graphql\";\nimport * as yup from \"yup\";\nimport { Field, Form, Formik } from \"formik\";\nimport { InputField } from \"./InputField\";\n\ninterface ChangeProfileProps {\n  profile: RegularProfileFragment | null;\n}\n\nconst validationSchema = yup.object({\n  trainingFrequency: yup.number().positive(),\n});\n\nexport const ChangeProfile: React.FC<ChangeProfileProps> = ({ profile }) => {\n  const apolloClient = useApolloClient();\n  const router = useRouter();\n  const [changeProfile] = useChangeProfileMutation();\n\n  return (\n    <Box>\n      <Formik\n        initialValues={\n          !profile\n            ? { lang_cd: \"\", trainingFrequency: 0, trainingType: \"\", sex: \"\" }\n            : {\n                lang_cd: profile.lang_cd,\n                trainingType: profile.trainingType,\n                trainingFrequency: profile.trainingFrequency,\n                sex: profile.sex,\n              }\n        }\n        validationSchema={validationSchema}\n        onSubmit={async (values) => {\n          await changeProfile({\n            variables: {\n              options: {\n                lang_cd: values.lang_cd,\n                trainingType: values.trainingType,\n                trainingFrequency: values.trainingFrequency,\n                sex: values.sex,\n              },\n            },\n          });\n          await apolloClient.resetStore();\n          router.push(\"/\");\n        }}\n      >\n        {({ isSubmitting, values }) => (\n          <Form>\n            <FormControl>\n              <FormLabel htmlFor=\"lang_cd\">Language</FormLabel>\n              <Field as={Select} name=\"lang_cd\" label=\"Language\" type=\"select\">\n                <option value=\"FR\" key=\"FR\">\n                  FR\n                </option>\n                <option value=\"EN\" key=\"EN\">\n                  EN\n                </option>\n              </Field>\n            </FormControl>\n            <InputField\n              name=\"trainingFrequency\"\n              placeholder=\"Training Frequency\"\n              label=\"Training Frequency\"\n              type=\"number\"\n            />\n            <InputField\n              name=\"trainingType\"\n              placeholder=\"Training Type\"\n              label=\"Training Type\"\n            />\n            <FormControl>\n              <FormLabel htmlFor=\"sex\">Sex</FormLabel>\n              <Field as={Select} name=\"sex\" label=\"Sex\" type=\"select\">\n                <option value=\"M\" key=\"M\">\n                  M\n                </option>\n                <option value=\"F\" key=\"F\">\n                  F\n                </option>\n              </Field>\n            </FormControl>\n            <Button\n              mt={4}\n              type=\"submit\"\n              isLoading={isSubmitting}\n              variantColor=\"teal\"\n            >\n              change profile\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}