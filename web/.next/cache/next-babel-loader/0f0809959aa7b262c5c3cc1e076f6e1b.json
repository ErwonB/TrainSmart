{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx\";\nimport { Button, Flex, Select, Textarea } from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport { useCreateWorkoutMutation, useExoQuery } from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\n\nconst CreatePost = ({}) => {\n  var _exo$exo;\n\n  const router = useRouter();\n  useIsAuth();\n  const [createWorkout] = useCreateWorkoutMutation();\n  const {\n    data: exo\n  } = useExoQuery();\n  const exoItems = exo === null || exo === void 0 ? void 0 : (_exo$exo = exo.exo) === null || _exo$exo === void 0 ? void 0 : _exo$exo.map(e => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: e.id,\n      children: e.exoDesc\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 33\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        workoutType: \"\",\n        workoutDt: \"\",\n        workoutDetails: []\n      },\n      onSubmit: async values => {\n        //   const { errors } = await createWorkout({\n        //     variables: { input: values },\n        //     update: (cache) => {\n        //       cache.evict({ fieldName: \"posts:{}\" });\n        //     },\n        //   });\n        //   if (!errors) {\n        //     router.push(\"/\");\n        //   }\n        console.log(values);\n      },\n      children: ({\n        isSubmitting,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"workoutType\",\n            placeholder: \"Workout Type\",\n            label: \"Workout Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"workoutDt\",\n            type: \"date\",\n            placeholder: \"Workout Date\",\n            label: \"Workout Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"workoutDetails\",\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => arrayHelpers.push({\n                  exoId: \"\",\n                  exoDetails: []\n                }),\n                children: \"add exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), values.workoutDetails.map((unitExo, index) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    as: Select,\n                    name: `workoutDetails.${index}.exoId`,\n                    type: \"select\",\n                    children: exoItems\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                    name: `workoutDetails.${index}.exoDetailsInput[0].sets`,\n                    placeholder: \"Sets\",\n                    label: \"Sets\",\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                    name: `workoutDetails.${index}.exoDetailsInput[0].reps`,\n                    placeholder: \"reps\",\n                    label: \"reps\",\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                    name: `workoutDetails.${index}.exoDetailsInput[0].weight`,\n                    placeholder: \"weight\",\n                    label: \"weight\",\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                    name: `workoutDetails.${index}.exoDetailsInput[0].grade`,\n                    placeholder: \"grade\",\n                    label: \"grade\",\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                    name: `workoutDetails.${index}.exoDetailsInput[0].rest`,\n                    placeholder: \"rest\",\n                    label: \"rest\",\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    as: Textarea,\n                    name: `workoutDetails.${index}.exoDetailsInput[0].feedback`,\n                    placeholder: \"feedback\",\n                    label: \"feedback\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => arrayHelpers.remove(index),\n                    children: \"x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 26\n                  }, this)]\n                }, void 0, true);\n              }), \";\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), \";\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          type: \"submit\",\n          isLoading: isSubmitting,\n          variantColor: \"teal\",\n          children: \"create workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(CreatePost);","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx"],"names":["Button","Flex","Select","Textarea","Field","FieldArray","Form","Formik","useRouter","React","InputField","Layout","useCreateWorkoutMutation","useExoQuery","useIsAuth","withApollo","CreatePost","router","createWorkout","data","exo","exoItems","map","e","id","exoDesc","workoutType","workoutDt","workoutDetails","values","console","log","isSubmitting","arrayHelpers","push","exoId","exoDetails","unitExo","index","remove","ssr"],"mappings":";;;AAAA,SAAcA,MAAd,EAAsBC,IAAtB,EAAsCC,MAAtC,EAA8CC,QAA9C,QAA8D,iBAA9D;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,IAA5B,EAAkCC,MAAlC,QAAgD,QAAhD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAAQC,wBAAR,EAAkCC,WAAlC,QAAoD,sBAApD;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,UAAwB,GAAG,CAAC,EAAD,KAAQ;AAAA;;AACvC,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACAM,EAAAA,SAAS;AACT,QAAM,CAACI,aAAD,IAAkBN,wBAAwB,EAAhD;AACA,QAAM;AAACO,IAAAA,IAAI,EAAEC;AAAP,MAAcP,WAAW,EAA/B;AACA,QAAMQ,QAAQ,GAAGD,GAAH,aAAGA,GAAH,mCAAGA,GAAG,CAAEA,GAAR,6CAAG,SAAUE,GAAV,CAAeC,CAAD,IACb;AACI,wBAAQ;AAAQ,MAAA,KAAK,EAAEA,CAAC,CAACC,EAAjB;AAAA,gBAAiCD,CAAC,CAACE;AAAnC,OAA0BF,CAAC,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAHF,CAAjB;AAMA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEE,QAAAA,WAAW,EAAE,EAAf;AAAmBC,QAAAA,SAAS,EAAE,EAA9B;AAAkCC,QAAAA,cAAc,EAAE;AAAlD,OADjB;AAEE,MAAA,QAAQ,EAAE,MAAOC,MAAP,IAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACC,OAbH;AAAA,gBAeG,CAAC;AAAEG,QAAAA,YAAF;AAAgBH,QAAAA;AAAhB,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD;AAAA,kCACA,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,aAAjB;AAA+B,YAAA,WAAW,EAAC,cAA3C;AAA0D,YAAA,KAAK,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,WAAjB;AAA6B,YAAA,IAAI,EAAC,MAAlC;AAAyC,YAAA,WAAW,EAAC,cAArD;AAAoE,YAAA,KAAK,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKP,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,gBAAjB;AAAA,iCACa;AAAA,uBACCI,YAAY,iBACb;AAAA,sCACA,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAMA,YAAY,CAACC,IAAb,CAAkB;AACrCC,kBAAAA,KAAK,EAAE,EAD8B;AAErCC,kBAAAA,UAAU,EAAG;AAFwB,iBAAlB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,EAKCP,MAAM,CAACD,cAAP,CAAsBN,GAAtB,CAA0B,CAACe,OAAD,EAAUC,KAAV,KAAoB;AAC3C,oCACI;AAAA,0CACA,QAAC,KAAD;AAAO,oBAAA,EAAE,EAAEpC,MAAX;AAAmB,oBAAA,IAAI,EAAG,kBAAiBoC,KAAM,QAAjD;AAA0D,oBAAA,IAAI,EAAC,QAA/D;AAAA,8BACKjB;AADL;AAAA;AAAA;AAAA;AAAA,0BADA,eAIA,QAAC,UAAD;AAAY,oBAAA,IAAI,EAAG,kBAAiBiB,KAAM,0BAA1C;AAAqE,oBAAA,WAAW,EAAC,MAAjF;AAAwF,oBAAA,KAAK,EAAE,MAA/F;AAAsG,oBAAA,IAAI,EAAC;AAA3G;AAAA;AAAA;AAAA;AAAA,0BAJA,eAKA,QAAC,UAAD;AAAY,oBAAA,IAAI,EAAG,kBAAiBA,KAAM,0BAA1C;AAAqE,oBAAA,WAAW,EAAC,MAAjF;AAAwF,oBAAA,KAAK,EAAE,MAA/F;AAAsG,oBAAA,IAAI,EAAC;AAA3G;AAAA;AAAA;AAAA;AAAA,0BALA,eAMA,QAAC,UAAD;AAAY,oBAAA,IAAI,EAAG,kBAAiBA,KAAM,4BAA1C;AAAuE,oBAAA,WAAW,EAAC,QAAnF;AAA4F,oBAAA,KAAK,EAAE,QAAnG;AAA4G,oBAAA,IAAI,EAAC;AAAjH;AAAA;AAAA;AAAA;AAAA,0BANA,eAOA,QAAC,UAAD;AAAY,oBAAA,IAAI,EAAG,kBAAiBA,KAAM,2BAA1C;AAAsE,oBAAA,WAAW,EAAC,OAAlF;AAA0F,oBAAA,KAAK,EAAE,OAAjG;AAAyG,oBAAA,IAAI,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,0BAPA,eAQA,QAAC,UAAD;AAAY,oBAAA,IAAI,EAAG,kBAAiBA,KAAM,0BAA1C;AAAqE,oBAAA,WAAW,EAAC,MAAjF;AAAwF,oBAAA,KAAK,EAAE,MAA/F;AAAsG,oBAAA,IAAI,EAAC;AAA3G;AAAA;AAAA;AAAA;AAAA,0BARA,eASA,QAAC,KAAD;AAAO,oBAAA,EAAE,EAAEnC,QAAX;AAAqB,oBAAA,IAAI,EAAG,kBAAiBmC,KAAM,8BAAnD;AAAkF,oBAAA,WAAW,EAAC,UAA9F;AAAyG,oBAAA,KAAK,EAAE;AAAhH;AAAA;AAAA;AAAA;AAAA,0BATA,eAUC,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAE,MAAML,YAAY,CAACM,MAAb,CAAoBD,KAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVD;AAAA,gCADJ;AAaG,eAdN,CALD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AADb;AAAA;AAAA;AAAA;AAAA,gBALO,eAgCE,QAAC,MAAD;AACE,UAAA,EAAE,EAAE,CADN;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,SAAS,EAAEN,YAHb;AAIE,UAAA,YAAY,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+DD,CA1ED;;AA4EA,eAAejB,UAAU,CAAC;AAAEyB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2BxB,UAA3B,CAAf","sourcesContent":["import { Box, Button, Flex, MenuItem, Select, Textarea } from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport {useCreateWorkoutMutation, useExoQuery} from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\n\nconst CreatePost: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  useIsAuth();\n  const [createWorkout] = useCreateWorkoutMutation();\n  const {data: exo} = useExoQuery();\n  const exoItems = exo?.exo?.map((e) => \n                    {\n                        return (<option value={e.id} key={e.id}>{e.exoDesc}</option>)\n                    }\n                ) ;\n\n  return (\n    <Layout variant=\"small\">\n      <Formik\n        initialValues={{ workoutType: \"\", workoutDt: \"\", workoutDetails: []}}\n        onSubmit={async (values) => {\n        //   const { errors } = await createWorkout({\n        //     variables: { input: values },\n        //     update: (cache) => {\n        //       cache.evict({ fieldName: \"posts:{}\" });\n        //     },\n        //   });\n        //   if (!errors) {\n        //     router.push(\"/\");\n        //   }\n        console.log(values)\n        }}\n      >\n        {({ isSubmitting, values}) => (\n          <Form>\n            <Flex>\n            <InputField name=\"workoutType\" placeholder=\"Workout Type\" label=\"Workout Type\" />\n            <InputField name=\"workoutDt\" type=\"date\" placeholder=\"Workout Date\" label=\"Workout Date\" />\n            </Flex>\n\t\t\t<FieldArray name=\"workoutDetails\">\n                <>\n                {arrayHelpers => (\n                <div>\n                <Button onClick={() => arrayHelpers.push({\n                    exoId: \"\",\n                    exoDetails : [],\n                })}>add exercise</Button>\n                {values.workoutDetails.map((unitExo, index) => {\n                    return (\n                        <>\n                        <Field as={Select} name={`workoutDetails.${index}.exoId`} type='select'>\n                            {exoItems}\n                        </Field>\n                        <InputField name={`workoutDetails.${index}.exoDetailsInput[0].sets`} placeholder=\"Sets\" label =\"Sets\" type=\"number\" />\n                        <InputField name={`workoutDetails.${index}.exoDetailsInput[0].reps`} placeholder=\"reps\" label =\"reps\" type=\"number\" />\n                        <InputField name={`workoutDetails.${index}.exoDetailsInput[0].weight`} placeholder=\"weight\" label =\"weight\" type=\"number\" />\n                        <InputField name={`workoutDetails.${index}.exoDetailsInput[0].grade`} placeholder=\"grade\" label =\"grade\" type=\"number\" />\n                        <InputField name={`workoutDetails.${index}.exoDetailsInput[0].rest`} placeholder=\"rest\" label =\"rest\" type=\"number\" />\n                        <Field as={Textarea} name={`workoutDetails.${index}.exoDetailsInput[0].feedback`} placeholder=\"feedback\" label =\"feedback\" />\n                         <Button onClick={() => arrayHelpers.remove(index)}>x</Button>\n                        </>\n                     )})};\n                </div>\n                )};\n                </>\n\t\t\t</FieldArray>\n            <Button\n              mt={4}\n              type=\"submit\"\n              isLoading={isSubmitting}\n              variantColor=\"teal\"\n            >\n              create workout\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: false })(CreatePost);\n"]},"metadata":{},"sourceType":"module"}