{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/components/NavBar.tsx\";\nimport React from \"react\";\nimport { Box, Link, Flex, Button, Heading, Text } from \"@chakra-ui/core\";\nimport NextLink from \"next/link\";\nimport { useMeQuery, useLogoutMutation } from \"../generated/graphql\";\nimport { isServer } from \"../utils/isServer\";\nimport { useApolloClient } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\n\nconst MenuItems = ({\n  children,\n  nextLink\n}) => /*#__PURE__*/_jsxDEV(NextLink, {\n  href: nextLink,\n  children: /*#__PURE__*/_jsxDEV(Text, {\n    mt: {\n      base: 4,\n      md: 0\n    },\n    mr: 6,\n    display: \"block\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\nexport const NavBar = ({}) => {\n  const [show, setShow] = React.useState(false);\n\n  const handleToggle = () => setShow(!show);\n\n  const [logout, {\n    loading: logoutFetching\n  }] = useLogoutMutation();\n  const router = useRouter();\n  const apolloClient = useApolloClient();\n  const {\n    data,\n    loading\n  } = useMeQuery({\n    skip: isServer()\n  });\n  let body = null;\n  let log = null; // data is loading\n\n  if (loading) {// user not logged in\n  } else if (!(data === null || data === void 0 ? void 0 : data.me)) {\n    log = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: {\n            sm: show ? \"block\" : \"none\",\n            md: \"block\"\n          },\n          mt: {\n            base: 4,\n            md: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            bg: \"transparent\",\n            border: \"1px\",\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: {\n            sm: show ? \"block\" : \"none\",\n            md: \"block\"\n          },\n          mt: {\n            base: 4,\n            md: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            bg: \"transparent\",\n            border: \"1px\",\n            children: \"register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true); // user is logged in\n  } else {\n    body = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MenuItems, {\n        nextLink: \"/create-workout\",\n        children: \"Create Workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItems, {\n        nextLink: \"/template\",\n        children: \"Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItems, {\n        nextLink: \"/profile\",\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n    log = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mr: 4,\n        children: data.me.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: {\n          sm: show ? \"block\" : \"none\",\n          md: \"block\"\n        },\n        mt: {\n          base: 4,\n          md: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          bg: \"transparent\",\n          border: \"1px\",\n          onClick: async () => {\n            await logout();\n            router.reload(); // await apolloClient.resetStore();\n          },\n          isLoading: logoutFetching,\n          children: \"logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    as: \"nav\",\n    align: \"center\",\n    justify: \"space-between\",\n    wrap: \"wrap\",\n    padding: \"1.5rem\",\n    bg: \"teal.500\",\n    color: \"white\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      mr: 5,\n      children: /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h1\",\n            size: \"lg\",\n            letterSpacing: \"-.1rem\",\n            children: \"TrainV2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: {\n        base: \"block\",\n        md: \"none\"\n      },\n      onClick: handleToggle,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        fill: \"white\",\n        width: \"12px\",\n        viewBox: \"0 0 20 20\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: {\n        sm: show ? \"block\" : \"none\",\n        md: \"flex\"\n      },\n      width: {\n        sm: \"full\",\n        md: \"auto\"\n      },\n      alignItems: \"center\",\n      flexGrow: 1,\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), log]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/components/NavBar.tsx"],"names":["React","Box","Link","Flex","Button","Heading","Text","NextLink","useMeQuery","useLogoutMutation","isServer","useApolloClient","useRouter","MenuItems","children","nextLink","base","md","NavBar","show","setShow","useState","handleToggle","logout","loading","logoutFetching","router","apolloClient","data","skip","body","log","me","sm","username","reload"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Box, Link, Flex, Button, Heading, Text } from \"@chakra-ui/core\";\nimport NextLink from \"next/link\";\nimport { useMeQuery, useLogoutMutation } from \"../generated/graphql\";\nimport { isServer } from \"../utils/isServer\";\nimport { useApolloClient } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\n\ninterface NavBarProps {}\n\nconst MenuItems = ({ children, nextLink }) => (\n  <NextLink href={nextLink}>\n    <Text mt={{ base: 4, md: 0 }} mr={6} display=\"block\">\n      {children}\n    </Text>\n  </NextLink>\n);\n\nexport const NavBar: React.FC<NavBarProps> = ({}) => {\n  const [show, setShow] = React.useState(false);\n  const handleToggle = () => setShow(!show);\n  const [logout, { loading: logoutFetching }] = useLogoutMutation();\n  const router = useRouter();\n  const apolloClient = useApolloClient();\n  const { data, loading } = useMeQuery({\n    skip: isServer(),\n  });\n\n  let body = null;\n  let log = null;\n\n  // data is loading\n  if (loading) {\n    // user not logged in\n  } else if (!data?.me) {\n    log = (\n      <>\n        <NextLink href=\"/login\">\n          <Box\n            display={{ sm: show ? \"block\" : \"none\", md: \"block\" }}\n            mt={{ base: 4, md: 0 }}\n          >\n            <Button bg=\"transparent\" border=\"1px\">\n              login\n            </Button>\n          </Box>\n        </NextLink>\n        <NextLink href=\"/register\">\n          <Box\n            display={{ sm: show ? \"block\" : \"none\", md: \"block\" }}\n            mt={{ base: 4, md: 0 }}\n          >\n            <Button bg=\"transparent\" border=\"1px\">\n              register\n            </Button>\n          </Box>\n        </NextLink>\n      </>\n    );\n    // user is logged in\n  } else {\n    body = (\n      <>\n        <MenuItems nextLink=\"/create-workout\">Create Workout</MenuItems>\n        <MenuItems nextLink=\"/template\">Template</MenuItems>\n        <MenuItems nextLink=\"/profile\">Profile</MenuItems>\n      </>\n    );\n    log = (\n      <>\n        <Box mr={4}>{data.me.username}</Box>\n        <Box\n          display={{ sm: show ? \"block\" : \"none\", md: \"block\" }}\n          mt={{ base: 4, md: 0 }}\n        >\n          <Button\n            bg=\"transparent\"\n            border=\"1px\"\n            onClick={async () => {\n              await logout();\n              router.reload();\n              // await apolloClient.resetStore();\n            }}\n            isLoading={logoutFetching}\n          >\n            logout\n          </Button>\n        </Box>\n      </>\n    );\n  }\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding=\"1.5rem\"\n      bg=\"teal.500\"\n      color=\"white\"\n    >\n      <Flex align=\"center\" mr={5}>\n        <NextLink href=\"/\">\n          <Link>\n            <Heading as=\"h1\" size=\"lg\" letterSpacing={\"-.1rem\"}>\n              TrainV2\n            </Heading>\n          </Link>\n        </NextLink>\n      </Flex>\n\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\n        <svg\n          fill=\"white\"\n          width=\"12px\"\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <title>Menu</title>\n          <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n        </svg>\n      </Box>\n\n      <Box\n        display={{ sm: show ? \"block\" : \"none\", md: \"flex\" }}\n        width={{ sm: \"full\", md: \"auto\" }}\n        alignItems=\"center\"\n        flexGrow={1}\n      >\n        {body}\n      </Box>\n\n      {log}\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}