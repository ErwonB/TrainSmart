{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx\";\nimport { IconButton, Box, Button, Flex, Select, Textarea, FormControl, FormLabel } from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport { useCreateWorkoutMutation, useExoQuery, useTemplatesQuery } from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\nimport * as yup from \"yup\";\nconst validationSchema = yup.object({\n  workoutDt: yup.date().required().max(new Date(new Date().setDate(new Date().getDate())), \"Can't create a workout in the future\"),\n  workoutDetails: yup.array().of(yup.object({\n    exoDetail: yup.array().of(yup.object({\n      sets: yup.number().integer().positive().required(\"Nb sets is required\"),\n      reps: yup.number().integer().positive().required(\"Nb reps is required\"),\n      weight: yup.number().positive().required(\"Weight is required\"),\n      grade: yup.number().positive().max(10).required(\"Grade is required\")\n    }))\n  }))\n});\n\nconst CreateWorkout = ({}) => {\n  var _exo$exo, _templates$templates;\n\n  const router = useRouter();\n  useIsAuth();\n  const [createWorkout] = useCreateWorkoutMutation();\n  const {\n    data: templates\n  } = useTemplatesQuery();\n  const {\n    data: exo\n  } = useExoQuery();\n  const exoItems = exo === null || exo === void 0 ? void 0 : (_exo$exo = exo.exo) === null || _exo$exo === void 0 ? void 0 : _exo$exo.map(e => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      as: MenuItems,\n      value: e.exoId,\n      children: e.exoDesc\n    }, e.exoId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  });\n  const {\n    0: tpInput,\n    1: setTpInput\n  } = useState({\n    workoutType: \"\",\n    workoutDt: \"\",\n    workoutDesc: \"\",\n    workoutDetails: []\n  });\n  const initValueForm = {};\n  const templatesName = templates === null || templates === void 0 ? void 0 : (_templates$templates = templates.templates) === null || _templates$templates === void 0 ? void 0 : _templates$templates.map(t => {\n    initValueForm[t.id] = {\n      workoutType: t.templateType,\n      workoutDt: \"\",\n      workoutDesc: \"\",\n      workoutDetails: t.templateDetails.map(td => {\n        return {\n          exoId: \"\" + td.exoId,\n          exoDetail: td.exoDetail.map(e => {\n            return {\n              sets: e.sets,\n              reps: e.reps,\n              weight: e.weight,\n              grade: e.grade,\n              rest: e.rest,\n              feedback: e.feedback\n            };\n          })\n        };\n      })\n    };\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: t.id,\n      children: t.name\n    }, t.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mr: {\n        sd: \"none\",\n        md: \"15%\"\n      },\n      ml: {\n        sd: \"none\",\n        md: \"15%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        enableReinitialize: true,\n        initialValues: tpInput,\n        validationSchema: validationSchema,\n        onSubmit: async values => {\n          const {\n            errors\n          } = await createWorkout({\n            variables: {\n              options: values\n            },\n            update: cache => {\n              cache.evict({\n                fieldName: \"workouts:{}\"\n              });\n            }\n          });\n\n          if (!errors) {\n            router.push(\"/\");\n          }\n        },\n        children: ({\n          isSubmitting,\n          values\n        }) => {\n          var _templates$templates2;\n\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mb: 4,\n              display: {\n                sm: \"block\",\n                md: \"flex\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputField, {\n                name: \"workoutType\",\n                placeholder: \"Workout Type\",\n                label: \"Workout Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                name: \"workoutDt\",\n                type: \"date\",\n                placeholder: \"Workout Date\",\n                label: \"Workout Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), (templates === null || templates === void 0 ? void 0 : (_templates$templates2 = templates.templates) === null || _templates$templates2 === void 0 ? void 0 : _templates$templates2.length) !== 0 ? /*#__PURE__*/_jsxDEV(FormControl, {\n                ml: {\n                  sm: \"none\",\n                  md: \"auto\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"templatesName\",\n                  children: \"Template List\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: Select,\n                  name: \"templatesName\",\n                  label: \"Template List\",\n                  type: \"select\",\n                  onChange: t => {\n                    if (parseInt(t.target.value, 10) === 0) {\n                      setTpInput({\n                        workoutType: \"\",\n                        workoutDesc: \"\",\n                        workoutDt: \"\",\n                        workoutDetails: []\n                      });\n                    } else {\n                      setTpInput(initValueForm[t.target.value]);\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"0\"\n                  }, \"0\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this), templatesName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n              name: \"workoutDetails\",\n              children: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => arrayHelpers.push({\n                    exoId: \"\",\n                    exoDetail: [{\n                      sets: \"\",\n                      reps: \"\",\n                      weight: \"\",\n                      grade: \"\",\n                      rest: 0,\n                      feedback: \"\"\n                    }]\n                  }),\n                  children: \"add exercise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), values.workoutDetails.map((unitExo, index) => {\n                  return /*#__PURE__*/_jsxDEV(Box, {\n                    children: [/*#__PURE__*/_jsxDEV(Flex, {\n                      children: [/*#__PURE__*/_jsxDEV(Field, {\n                        as: Select,\n                        name: `workoutDetails.${index}.exoId`,\n                        type: \"select\",\n                        children: exoItems\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                        as: Button,\n                        icon: \"delete\",\n                        \"aria-label\": \"Delete exercise\",\n                        onClick: () => arrayHelpers.remove(index)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                      children: /*#__PURE__*/_jsxDEV(FieldArray, {\n                        name: \"exoDetail\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: unitExo.exoDetail.map((_unitExoDetail, exoIndex) => {\n                            return /*#__PURE__*/_jsxDEV(Flex, {\n                              children: [/*#__PURE__*/_jsxDEV(InputField, {\n                                name: `workoutDetails.${index}.exoDetail.${exoIndex}.sets`,\n                                placeholder: \"sets\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 211,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                                name: `workoutDetails.${index}.exoDetail.${exoIndex}.reps`,\n                                placeholder: \"reps\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 216,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                                name: `workoutDetails.${index}.exoDetail.${exoIndex}.weight`,\n                                placeholder: \"weight\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 221,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                                name: `workoutDetails.${index}.exoDetail.${exoIndex}.grade`,\n                                placeholder: \"grade\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 226,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                                name: `workoutDetails.${index}.exoDetail.${exoIndex}.rest`,\n                                placeholder: \"rest\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 231,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                                as: Textarea,\n                                name: `workoutDetails.${index}.exoDetail.${exoIndex}.feedback`,\n                                placeholder: \"feedback\",\n                                textarea: true\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 236,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                                as: Button,\n                                icon: \"delete\",\n                                \"aria-label\": \"Delete Exo Detail\",\n                                onClick: () => {\n                                  unitExo.exoDetail.splice(exoIndex, 1);\n                                  arrayHelpers.replace(index, unitExo);\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 242,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                                as: Button,\n                                icon: \"add\",\n                                \"aria-label\": \"Add Exo Detail\",\n                                onClick: () => {\n                                  unitExo.exoDetail.splice(exoIndex + 1, 0, {\n                                    sets: \"\",\n                                    reps: \"\",\n                                    weight: \"\",\n                                    grade: \"\",\n                                    rest: 0,\n                                    feedback: \"\"\n                                  });\n                                  arrayHelpers.replace(index, unitExo);\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 257,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 210,\n                              columnNumber: 39\n                            }, this);\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 206,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              mt: 4,\n              type: \"submit\",\n              isLoading: isSubmitting,\n              variantColor: \"teal\",\n              children: \"create workout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(CreateWorkout);","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx"],"names":["IconButton","Box","Button","Flex","Select","Textarea","FormControl","FormLabel","Field","FieldArray","Form","Formik","useRouter","React","useState","InputField","Layout","useCreateWorkoutMutation","useExoQuery","useTemplatesQuery","useIsAuth","withApollo","yup","validationSchema","object","workoutDt","date","required","max","Date","setDate","getDate","workoutDetails","array","of","exoDetail","sets","number","integer","positive","reps","weight","grade","CreateWorkout","router","createWorkout","data","templates","exo","exoItems","map","e","MenuItems","exoId","exoDesc","tpInput","setTpInput","workoutType","workoutDesc","initValueForm","templatesName","t","id","templateType","templateDetails","td","rest","feedback","name","sd","md","values","errors","variables","options","update","cache","evict","fieldName","push","isSubmitting","sm","length","parseInt","target","value","arrayHelpers","unitExo","index","remove","_unitExoDetail","exoIndex","splice","replace","ssr"],"mappings":"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","sourcesContent":["import {\n  IconButton,\n  Box,\n  Button,\n  Flex,\n  Select,\n  Textarea,\n  FormControl,\n  FormLabel,\n} from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport {\n  useCreateWorkoutMutation,\n  useExoQuery,\n  useTemplatesQuery,\n  WorkoutInput,\n} from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\nimport * as yup from \"yup\";\n\nconst validationSchema = yup.object({\n  workoutDt: yup\n    .date()\n    .required()\n    .max(\n      new Date(new Date().setDate(new Date().getDate())),\n      \"Can't create a workout in the future\"\n    ),\n  workoutDetails: yup.array().of(\n    yup.object({\n      exoDetail: yup.array().of(\n        yup.object({\n          sets: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb sets is required\"),\n          reps: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb reps is required\"),\n          weight: yup.number().positive().required(\"Weight is required\"),\n          grade: yup.number().positive().max(10).required(\"Grade is required\"),\n        })\n      ),\n    })\n  ),\n});\n\nconst CreateWorkout: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  useIsAuth();\n  const [createWorkout] = useCreateWorkoutMutation();\n  const { data: templates } = useTemplatesQuery();\n  const { data: exo } = useExoQuery();\n  const exoItems = exo?.exo?.map((e) => {\n    return (\n      <option as={MenuItems} value={e.exoId} key={e.exoId}>\n        {e.exoDesc}\n      </option>\n    );\n  });\n  const [tpInput, setTpInput] = useState<WorkoutInput>({\n    workoutType: \"\",\n    workoutDt: \"\",\n    workoutDesc: \"\",\n    workoutDetails: [],\n  });\n  const initValueForm: Record<number, WorkoutInput> = {};\n  const templatesName = templates?.templates?.map((t) => {\n    initValueForm[t.id] = {\n      workoutType: t.templateType,\n      workoutDt: \"\",\n      workoutDesc: \"\",\n      workoutDetails: t.templateDetails.map((td) => {\n        return {\n          exoId: \"\" + td.exoId,\n          exoDetail: td.exoDetail.map((e) => {\n            return {\n              sets: e.sets,\n              reps: e.reps,\n              weight: e.weight,\n              grade: e.grade,\n              rest: e.rest,\n              feedback: e.feedback,\n            };\n          }),\n        };\n      }),\n    };\n\n    return (\n      <option value={t.id} key={t.id}>\n        {t.name}\n      </option>\n    );\n  });\n  return (\n    <Layout>\n      <Box mr={{ sd: \"none\", md: \"15%\" }} ml={{ sd: \"none\", md: \"15%\" }}>\n        <Formik\n          enableReinitialize={true}\n          initialValues={tpInput}\n          validationSchema={validationSchema}\n          onSubmit={async (values) => {\n            const { errors } = await createWorkout({\n              variables: { options: values },\n              update: (cache) => {\n                cache.evict({ fieldName: \"workouts:{}\" });\n              },\n            });\n            if (!errors) {\n              router.push(\"/\");\n            }\n          }}\n        >\n          {({ isSubmitting, values }) => (\n            <Form>\n              <Box mb={4} display={{ sm: \"block\", md: \"flex\" }}>\n                <InputField\n                  name=\"workoutType\"\n                  placeholder=\"Workout Type\"\n                  label=\"Workout Type\"\n                />\n                <InputField\n                  name=\"workoutDt\"\n                  type=\"date\"\n                  placeholder=\"Workout Date\"\n                  label=\"Workout Date\"\n                />\n                {templates?.templates?.length !== 0 ? (\n                  <FormControl ml={{ sm: \"none\", md: \"auto\" }}>\n                    <FormLabel htmlFor=\"templatesName\">Template List</FormLabel>\n                    <Field\n                      as={Select}\n                      name=\"templatesName\"\n                      label=\"Template List\"\n                      type=\"select\"\n                      onChange={(t: any) => {\n                        if (parseInt(t.target.value, 10) === 0) {\n                          setTpInput({\n                            workoutType: \"\",\n                            workoutDesc: \"\",\n                            workoutDt: \"\",\n                            workoutDetails: [],\n                          });\n                        } else {\n                          setTpInput(initValueForm[t.target.value]);\n                        }\n                      }}\n                    >\n                      <option value=\"0\" key=\"0\"></option>\n                      {templatesName}\n                    </Field>\n                  </FormControl>\n                ) : null}\n              </Box>\n              <FieldArray name=\"workoutDetails\">\n                {(arrayHelpers) => (\n                  <div>\n                    <Button\n                      onClick={() =>\n                        arrayHelpers.push({\n                          exoId: \"\",\n                          exoDetail: [\n                            {\n                              sets: \"\",\n                              reps: \"\",\n                              weight: \"\",\n                              grade: \"\",\n                              rest: 0,\n                              feedback: \"\",\n                            },\n                          ],\n                        })\n                      }\n                    >\n                      add exercise\n                    </Button>\n                    {values.workoutDetails.map((unitExo, index) => {\n                      return (\n                        <Box>\n                          <Flex>\n                            <Field\n                              as={Select}\n                              name={`workoutDetails.${index}.exoId`}\n                              type=\"select\"\n                            >\n                              {exoItems}\n                            </Field>\n                            <IconButton\n                              as={Button}\n                              icon=\"delete\"\n                              aria-label=\"Delete exercise\"\n                              onClick={() => arrayHelpers.remove(index)}\n                            />\n                          </Flex>\n                          <Flex>\n                            <FieldArray name=\"exoDetail\">\n                              <div>\n                                {unitExo.exoDetail.map(\n                                  (_unitExoDetail, exoIndex) => {\n                                    return (\n                                      <Flex>\n                                        <InputField\n                                          name={`workoutDetails.${index}.exoDetail.${exoIndex}.sets`}\n                                          placeholder=\"sets\"\n                                          type=\"number\"\n                                        />\n                                        <InputField\n                                          name={`workoutDetails.${index}.exoDetail.${exoIndex}.reps`}\n                                          placeholder=\"reps\"\n                                          type=\"number\"\n                                        />\n                                        <InputField\n                                          name={`workoutDetails.${index}.exoDetail.${exoIndex}.weight`}\n                                          placeholder=\"weight\"\n                                          type=\"number\"\n                                        />\n                                        <InputField\n                                          name={`workoutDetails.${index}.exoDetail.${exoIndex}.grade`}\n                                          placeholder=\"grade\"\n                                          type=\"number\"\n                                        />\n                                        <InputField\n                                          name={`workoutDetails.${index}.exoDetail.${exoIndex}.rest`}\n                                          placeholder=\"rest\"\n                                          type=\"number\"\n                                        />\n                                        <InputField\n                                          as={Textarea}\n                                          name={`workoutDetails.${index}.exoDetail.${exoIndex}.feedback`}\n                                          placeholder=\"feedback\"\n                                          textarea\n                                        />\n                                        <IconButton\n                                          as={Button}\n                                          icon=\"delete\"\n                                          aria-label=\"Delete Exo Detail\"\n                                          onClick={() => {\n                                            unitExo.exoDetail.splice(\n                                              exoIndex,\n                                              1\n                                            );\n                                            arrayHelpers.replace(\n                                              index,\n                                              unitExo\n                                            );\n                                          }}\n                                        />\n                                        <IconButton\n                                          as={Button}\n                                          icon=\"add\"\n                                          aria-label=\"Add Exo Detail\"\n                                          onClick={() => {\n                                            unitExo.exoDetail.splice(\n                                              exoIndex + 1,\n                                              0,\n                                              {\n                                                sets: \"\",\n                                                reps: \"\",\n                                                weight: \"\",\n                                                grade: \"\",\n                                                rest: 0,\n                                                feedback: \"\",\n                                              }\n                                            );\n                                            arrayHelpers.replace(\n                                              index,\n                                              unitExo\n                                            );\n                                          }}\n                                        />\n                                      </Flex>\n                                    );\n                                  }\n                                )}\n                              </div>\n                            </FieldArray>\n                          </Flex>\n                        </Box>\n                      );\n                    })}\n                  </div>\n                )}\n              </FieldArray>\n              <Button\n                mt={4}\n                type=\"submit\"\n                isLoading={isSubmitting}\n                variantColor=\"teal\"\n              >\n                create workout\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: false })(CreateWorkout);\n"]},"metadata":{},"sourceType":"module"}