{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx\";\nimport { IconButton, Box, Button, Flex, Select, Textarea } from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport { useCreateWorkoutMutation, useExoQuery } from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\nimport * as yup from \"yup\";\nconst validationSchema = yup.object({\n  workoutDt: yup.date().max(new Date(new Date().setDate(new Date().getDate())), \"Can't create a workout in the future\"),\n  workoutDetails: yup.array().of(yup.object({\n    exoDetail: yup.array().of(yup.object({\n      sets: yup.number().integer().positive().required(\"Nb sets is required\"),\n      reps: yup.number().integer().positive().required(\"Nb reps is required\"),\n      weight: yup.number().positive().required(\"Weight is required\"),\n      grade: yup.number().positive().max(10).required(\"Grade is required\")\n    }))\n  }))\n});\n\nconst CreateWorkout = ({}) => {\n  var _exo$exo;\n\n  const router = useRouter();\n  useIsAuth();\n  const [createWorkout] = useCreateWorkoutMutation();\n  const {\n    data: exo\n  } = useExoQuery();\n  const exoItems = exo === null || exo === void 0 ? void 0 : (_exo$exo = exo.exo) === null || _exo$exo === void 0 ? void 0 : _exo$exo.map(e => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: e.id,\n      children: e.exoDesc\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    variant: \"regular\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        workoutType: \"\",\n        workoutDesc: \"\",\n        workoutDt: \"\",\n        workoutDetails: []\n      },\n      validationSchema: validationSchema,\n      onSubmit: async values => {\n        const {\n          errors\n        } = await createWorkout({\n          variables: {\n            options: values\n          },\n          update: cache => {\n            cache.evict({\n              fieldName: \"workouts:{}\"\n            });\n          }\n        });\n\n        if (!errors) {\n          router.push(\"/\");\n        }\n      },\n      children: ({\n        isSubmitting,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"workoutType\",\n            placeholder: \"Workout Type\",\n            label: \"Workout Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"workoutDt\",\n            type: \"date\",\n            placeholder: \"Workout Date\",\n            label: \"Workout Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"workoutDetails\",\n          children: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => arrayHelpers.push({\n                exoId: \"\",\n                exoDetail: [{\n                  sets: \"\",\n                  reps: \"\",\n                  weight: \"\",\n                  grade: \"\",\n                  rest: 0,\n                  feedback: \"\"\n                }]\n              }),\n              children: \"add exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), values.workoutDetails.map((unitExo, index) => {\n              return /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Flex, {\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    as: Select,\n                    name: `workoutDetails.${index}.exoId`,\n                    type: \"select\",\n                    children: exoItems\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    as: Button,\n                    icon: \"delete\",\n                    \"aria-label\": \"Delete exercise\",\n                    onClick: () => arrayHelpers.remove(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  children: /*#__PURE__*/_jsxDEV(FieldArray, {\n                    name: \"exoDetail\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: unitExo.exoDetail.map((_unitExoDetail, exoIndex) => {\n                        return /*#__PURE__*/_jsxDEV(Flex, {\n                          children: [/*#__PURE__*/_jsxDEV(InputField, {\n                            name: `workoutDetails.${index}.exoDetail.${exoIndex}.sets`,\n                            placeholder: \"sets\",\n                            type: \"number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 144,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                            name: `workoutDetails.${index}.exoDetail.${exoIndex}.reps`,\n                            placeholder: \"reps\",\n                            type: \"number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 149,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                            name: `workoutDetails.${index}.exoDetail.${exoIndex}.weight`,\n                            placeholder: \"weight\",\n                            type: \"number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 154,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                            name: `workoutDetails.${index}.exoDetail.${exoIndex}.grade`,\n                            placeholder: \"grade\",\n                            type: \"number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 159,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                            name: `workoutDetails.${index}.exoDetail.${exoIndex}.rest`,\n                            placeholder: \"rest\",\n                            type: \"number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 164,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                            as: Textarea,\n                            name: `workoutDetails.${index}.exoDetail.${exoIndex}.feedback`,\n                            placeholder: \"feedback\",\n                            textarea: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 169,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                            as: Button,\n                            icon: \"delete\",\n                            \"aria-label\": \"Delete Exo Detail\",\n                            onClick: () => {\n                              unitExo.exoDetail.splice(exoIndex, 1);\n                              arrayHelpers.replace(index, unitExo);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 175,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                            as: Button,\n                            icon: \"add\",\n                            \"aria-label\": \"Add Exo Detail\",\n                            onClick: () => {\n                              unitExo.exoDetail.splice(exoIndex + 1, 0, {\n                                sets: \"\",\n                                reps: \"\",\n                                weight: \"\",\n                                grade: \"\",\n                                rest: 0,\n                                feedback: \"\"\n                              });\n                              arrayHelpers.replace(index, unitExo);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 184,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 143,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          type: \"submit\",\n          isLoading: isSubmitting,\n          variantColor: \"teal\",\n          children: \"create workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(CreateWorkout);","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx"],"names":["IconButton","Box","Button","Flex","Select","Textarea","Field","FieldArray","Form","Formik","useRouter","React","InputField","Layout","useCreateWorkoutMutation","useExoQuery","useIsAuth","withApollo","yup","validationSchema","object","workoutDt","date","max","Date","setDate","getDate","workoutDetails","array","of","exoDetail","sets","number","integer","positive","required","reps","weight","grade","CreateWorkout","router","createWorkout","data","exo","exoItems","map","e","id","exoDesc","workoutType","workoutDesc","values","errors","variables","options","update","cache","evict","fieldName","push","isSubmitting","arrayHelpers","exoId","rest","feedback","unitExo","index","remove","_unitExoDetail","exoIndex","splice","replace","ssr"],"mappings":"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","sourcesContent":["import {\n  IconButton,\n  Box,\n  Button,\n  Flex,\n  Select,\n  Textarea,\n} from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport { useCreateWorkoutMutation, useExoQuery } from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\nimport * as yup from \"yup\";\n\nconst validationSchema = yup.object({\n  workoutDt: yup\n    .date()\n    .max(\n      new Date(new Date().setDate(new Date().getDate())),\n      \"Can't create a workout in the future\"\n    ),\n  workoutDetails: yup.array().of(\n    yup.object({\n      exoDetail: yup.array().of(\n        yup.object({\n          sets: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb sets is required\"),\n          reps: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb reps is required\"),\n          weight: yup.number().positive().required(\"Weight is required\"),\n          grade: yup.number().positive().max(10).required(\"Grade is required\"),\n        })\n      ),\n    })\n  ),\n});\n\nconst CreateWorkout: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  useIsAuth();\n  const [createWorkout] = useCreateWorkoutMutation();\n  const { data: exo } = useExoQuery();\n  const exoItems = exo?.exo?.map((e) => {\n    return (\n      <option value={e.id} key={e.id}>\n        {e.exoDesc}\n      </option>\n    );\n  });\n  return (\n    <Layout variant=\"regular\">\n      <Formik\n        initialValues={{\n          workoutType: \"\",\n          workoutDesc: \"\",\n          workoutDt: \"\",\n          workoutDetails: [],\n        }}\n        validationSchema={validationSchema}\n        onSubmit={async (values) => {\n          const { errors } = await createWorkout({\n            variables: { options: values },\n            update: (cache) => {\n              cache.evict({ fieldName: \"workouts:{}\" });\n            },\n          });\n          if (!errors) {\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting, values }) => (\n          <Form>\n            <Flex>\n              <InputField\n                name=\"workoutType\"\n                placeholder=\"Workout Type\"\n                label=\"Workout Type\"\n              />\n              <InputField\n                name=\"workoutDt\"\n                type=\"date\"\n                placeholder=\"Workout Date\"\n                label=\"Workout Date\"\n              />\n            </Flex>\n            <FieldArray name=\"workoutDetails\">\n              {(arrayHelpers) => (\n                <div>\n                  <Button\n                    onClick={() =>\n                      arrayHelpers.push({\n                        exoId: \"\",\n                        exoDetail: [\n                          {\n                            sets: \"\",\n                            reps: \"\",\n                            weight: \"\",\n                            grade: \"\",\n                            rest: 0,\n                            feedback: \"\",\n                          },\n                        ],\n                      })\n                    }\n                  >\n                    add exercise\n                  </Button>\n                  {values.workoutDetails.map((unitExo, index) => {\n                    return (\n                      <Box>\n                        <Flex>\n                          <Field\n                            as={Select}\n                            name={`workoutDetails.${index}.exoId`}\n                            type=\"select\"\n                          >\n                            {exoItems}\n                          </Field>\n                          <IconButton\n                            as={Button}\n                            icon=\"delete\"\n                            aria-label=\"Delete exercise\"\n                            onClick={() => arrayHelpers.remove(index)}\n                          />\n                        </Flex>\n                        <Flex>\n                          <FieldArray name=\"exoDetail\">\n                            <div>\n                              {unitExo.exoDetail.map(\n                                (_unitExoDetail, exoIndex) => {\n                                  return (\n                                    <Flex>\n                                      <InputField\n                                        name={`workoutDetails.${index}.exoDetail.${exoIndex}.sets`}\n                                        placeholder=\"sets\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`workoutDetails.${index}.exoDetail.${exoIndex}.reps`}\n                                        placeholder=\"reps\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`workoutDetails.${index}.exoDetail.${exoIndex}.weight`}\n                                        placeholder=\"weight\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`workoutDetails.${index}.exoDetail.${exoIndex}.grade`}\n                                        placeholder=\"grade\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`workoutDetails.${index}.exoDetail.${exoIndex}.rest`}\n                                        placeholder=\"rest\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        as={Textarea}\n                                        name={`workoutDetails.${index}.exoDetail.${exoIndex}.feedback`}\n                                        placeholder=\"feedback\"\n                                        textarea\n                                      />\n                                      <IconButton\n                                        as={Button}\n                                        icon=\"delete\"\n                                        aria-label=\"Delete Exo Detail\"\n                                        onClick={() => {\n                                          unitExo.exoDetail.splice(exoIndex, 1);\n                                          arrayHelpers.replace(index, unitExo);\n                                        }}\n                                      />\n                                      <IconButton\n                                        as={Button}\n                                        icon=\"add\"\n                                        aria-label=\"Add Exo Detail\"\n                                        onClick={() => {\n                                          unitExo.exoDetail.splice(\n                                            exoIndex + 1,\n                                            0,\n                                            {\n                                              sets: \"\",\n                                              reps: \"\",\n                                              weight: \"\",\n                                              grade: \"\",\n                                              rest: 0,\n                                              feedback: \"\",\n                                            }\n                                          );\n                                          arrayHelpers.replace(index, unitExo);\n                                        }}\n                                      />\n                                    </Flex>\n                                  );\n                                }\n                              )}\n                            </div>\n                          </FieldArray>\n                        </Flex>\n                      </Box>\n                    );\n                  })}\n                </div>\n              )}\n            </FieldArray>\n            <Button\n              mt={4}\n              type=\"submit\"\n              isLoading={isSubmitting}\n              variantColor=\"teal\"\n            >\n              create workout\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: false })(CreateWorkout);\n"]},"metadata":{},"sourceType":"module"}