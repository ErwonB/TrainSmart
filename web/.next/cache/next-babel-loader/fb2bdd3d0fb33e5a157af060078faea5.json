{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { IconButton, Box, Button, Flex, Select, Textarea, FormControl, FormLabel } from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport { useCreateWorkoutMutation, useExoQuery, useTemplatesQuery } from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\nimport * as yup from \"yup\";\nvar validationSchema = yup.object({\n  workoutDt: yup.date().max(new Date(new Date().setDate(new Date().getDate())), \"Can't create a workout in the future\"),\n  workoutDetails: yup.array().of(yup.object({\n    exoDetail: yup.array().of(yup.object({\n      sets: yup.number().integer().positive().required(\"Nb sets is required\"),\n      reps: yup.number().integer().positive().required(\"Nb reps is required\"),\n      weight: yup.number().positive().required(\"Weight is required\"),\n      grade: yup.number().positive().max(10).required(\"Grade is required\")\n    }))\n  }))\n});\n\nvar CreateWorkout = function CreateWorkout(_ref) {\n  _s();\n\n  var _exo$exo, _templates$templates;\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  useIsAuth();\n\n  var _useCreateWorkoutMuta = useCreateWorkoutMutation(),\n      _useCreateWorkoutMuta2 = _slicedToArray(_useCreateWorkoutMuta, 1),\n      createWorkout = _useCreateWorkoutMuta2[0];\n\n  var _useTemplatesQuery = useTemplatesQuery(),\n      templates = _useTemplatesQuery.data;\n\n  var _useExoQuery = useExoQuery(),\n      exo = _useExoQuery.data;\n\n  var exoItems = exo === null || exo === void 0 ? void 0 : (_exo$exo = exo.exo) === null || _exo$exo === void 0 ? void 0 : _exo$exo.map(function (e) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: e.exoId,\n      children: e.exoDesc\n    }, e.exoId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this);\n  });\n\n  var _useState = useState({\n    workoutType: \"\",\n    workoutDt: \"\",\n    workoutDesc: \"\",\n    workoutDetails: []\n  }),\n      tpInput = _useState[0],\n      setTpInput = _useState[1];\n\n  var initValueForm = {};\n  var templatesName = templates === null || templates === void 0 ? void 0 : (_templates$templates = templates.templates) === null || _templates$templates === void 0 ? void 0 : _templates$templates.map(function (t) {\n    initValueForm[t.id] = {\n      workoutType: t.templateType,\n      workoutDt: \"\",\n      workoutDesc: \"\",\n      workoutDetails: t.templateDetails.map(function (td) {\n        return {\n          exoId: \"\" + td.exoId,\n          exoDetail: td.exoDetail.map(function (e) {\n            return {\n              sets: e.sets,\n              reps: e.reps,\n              weight: e.weight,\n              grade: e.grade,\n              rest: e.rest,\n              feedback: e.feedback\n            };\n          })\n        };\n      })\n    };\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: t.id,\n      children: t.name\n    }, t.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mr: {\n        sd: \"none\",\n        md: \"15%\"\n      },\n      ml: {\n        sd: \"none\",\n        md: \"15%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        enableReinitialize: true,\n        initialValues: tpInput,\n        validationSchema: validationSchema,\n        onSubmit: /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n            var _yield$createWorkout, errors;\n\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return createWorkout({\n                      variables: {\n                        options: values\n                      },\n                      update: function update(cache) {\n                        cache.evict({\n                          fieldName: \"workouts:{}\"\n                        });\n                      }\n                    });\n\n                  case 2:\n                    _yield$createWorkout = _context.sent;\n                    errors = _yield$createWorkout.errors;\n\n                    if (!errors) {\n                      router.push(\"/\");\n                    }\n\n                  case 5:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }(),\n        children: function children(_ref3) {\n          var _templates$templates2;\n\n          var isSubmitting = _ref3.isSubmitting,\n              values = _ref3.values;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              children: [/*#__PURE__*/_jsxDEV(InputField, {\n                name: \"workoutType\",\n                placeholder: \"Workout Type\",\n                label: \"Workout Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                name: \"workoutDt\",\n                type: \"date\",\n                placeholder: \"Workout Date\",\n                label: \"Workout Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, _this), (templates === null || templates === void 0 ? void 0 : (_templates$templates2 = templates.templates) === null || _templates$templates2 === void 0 ? void 0 : _templates$templates2.length) !== 0 ? /*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"templatesName\",\n                  children: \"Template List\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: Select,\n                  name: \"templatesName\",\n                  label: \"Template List\",\n                  type: \"select\",\n                  onChange: function onChange(t) {\n                    if (parseInt(t.target.value, 10) === 0) {\n                      setTpInput({\n                        workoutType: \"\",\n                        workoutDesc: \"\",\n                        workoutDt: \"\",\n                        workoutDetails: []\n                      });\n                    } else {\n                      setTpInput(initValueForm[t.target.value]);\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"0\"\n                  }, \"0\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, _this), templatesName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, _this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(FieldArray, {\n              name: \"workoutDetails\",\n              children: function children(arrayHelpers) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    onClick: function onClick() {\n                      return arrayHelpers.push({\n                        exoId: \"\",\n                        exoDetail: [{\n                          sets: \"\",\n                          reps: \"\",\n                          weight: \"\",\n                          grade: \"\",\n                          rest: 0,\n                          feedback: \"\"\n                        }]\n                      });\n                    },\n                    children: \"add exercise\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 21\n                  }, _this), values.workoutDetails.map(function (unitExo, index) {\n                    return /*#__PURE__*/_jsxDEV(Box, {\n                      children: [/*#__PURE__*/_jsxDEV(Flex, {\n                        children: [/*#__PURE__*/_jsxDEV(Field, {\n                          as: Select,\n                          name: \"workoutDetails.\".concat(index, \".exoId\"),\n                          type: \"select\",\n                          children: exoItems\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 29\n                        }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                          as: Button,\n                          icon: \"delete\",\n                          \"aria-label\": \"Delete exercise\",\n                          onClick: function onClick() {\n                            return arrayHelpers.remove(index);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 196,\n                          columnNumber: 29\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 27\n                      }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n                        children: /*#__PURE__*/_jsxDEV(FieldArray, {\n                          name: \"exoDetail\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: unitExo.exoDetail.map(function (_unitExoDetail, exoIndex) {\n                              return /*#__PURE__*/_jsxDEV(Flex, {\n                                children: [/*#__PURE__*/_jsxDEV(InputField, {\n                                  name: \"workoutDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".sets\"),\n                                  placeholder: \"sets\",\n                                  type: \"number\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 210,\n                                  columnNumber: 41\n                                }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                  name: \"workoutDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".reps\"),\n                                  placeholder: \"reps\",\n                                  type: \"number\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 215,\n                                  columnNumber: 41\n                                }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                  name: \"workoutDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".weight\"),\n                                  placeholder: \"weight\",\n                                  type: \"number\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 220,\n                                  columnNumber: 41\n                                }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                  name: \"workoutDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".grade\"),\n                                  placeholder: \"grade\",\n                                  type: \"number\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 225,\n                                  columnNumber: 41\n                                }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                  name: \"workoutDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".rest\"),\n                                  placeholder: \"rest\",\n                                  type: \"number\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 230,\n                                  columnNumber: 41\n                                }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                  as: Textarea,\n                                  name: \"workoutDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".feedback\"),\n                                  placeholder: \"feedback\",\n                                  textarea: true\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 235,\n                                  columnNumber: 41\n                                }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                                  as: Button,\n                                  icon: \"delete\",\n                                  \"aria-label\": \"Delete Exo Detail\",\n                                  onClick: function onClick() {\n                                    unitExo.exoDetail.splice(exoIndex, 1);\n                                    arrayHelpers.replace(index, unitExo);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 241,\n                                  columnNumber: 41\n                                }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                                  as: Button,\n                                  icon: \"add\",\n                                  \"aria-label\": \"Add Exo Detail\",\n                                  onClick: function onClick() {\n                                    unitExo.exoDetail.splice(exoIndex + 1, 0, {\n                                      sets: \"\",\n                                      reps: \"\",\n                                      weight: \"\",\n                                      grade: \"\",\n                                      rest: 0,\n                                      feedback: \"\"\n                                    });\n                                    arrayHelpers.replace(index, unitExo);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 256,\n                                  columnNumber: 41\n                                }, _this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 209,\n                                columnNumber: 39\n                              }, _this);\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 205,\n                            columnNumber: 31\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 204,\n                          columnNumber: 29\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 27\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 25\n                    }, _this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              mt: 4,\n              type: \"submit\",\n              isLoading: isSubmitting,\n              variantColor: \"teal\",\n              children: \"create workout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateWorkout, \"g/1/AlO0QtXo5zcmrxmL/uXia6E=\", false, function () {\n  return [useRouter, useIsAuth, useCreateWorkoutMutation, useTemplatesQuery, useExoQuery];\n});\n\n_c = CreateWorkout;\nexport default withApollo({\n  ssr: false\n})(CreateWorkout);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateWorkout\");","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx"],"names":["IconButton","Box","Button","Flex","Select","Textarea","FormControl","FormLabel","Field","FieldArray","Form","Formik","useRouter","React","useState","InputField","Layout","useCreateWorkoutMutation","useExoQuery","useTemplatesQuery","useIsAuth","withApollo","yup","validationSchema","object","workoutDt","date","max","Date","setDate","getDate","workoutDetails","array","of","exoDetail","sets","number","integer","positive","required","reps","weight","grade","CreateWorkout","router","createWorkout","templates","data","exo","exoItems","map","e","exoId","exoDesc","workoutType","workoutDesc","tpInput","setTpInput","initValueForm","templatesName","t","id","templateType","templateDetails","td","rest","feedback","name","sd","md","values","variables","options","update","cache","evict","fieldName","errors","push","isSubmitting","length","parseInt","target","value","arrayHelpers","unitExo","index","remove","_unitExoDetail","exoIndex","splice","replace","ssr"],"mappings":"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","sourcesContent":["import {\n  IconButton,\n  Box,\n  Button,\n  Flex,\n  Select,\n  Textarea,\n  FormControl,\n  FormLabel,\n} from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport {\n  useCreateWorkoutMutation,\n  useExoQuery,\n  useTemplatesQuery,\n  WorkoutInput,\n} from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\nimport * as yup from \"yup\";\n\nconst validationSchema = yup.object({\n  workoutDt: yup\n    .date()\n    .max(\n      new Date(new Date().setDate(new Date().getDate())),\n      \"Can't create a workout in the future\"\n    ),\n  workoutDetails: yup.array().of(\n    yup.object({\n      exoDetail: yup.array().of(\n        yup.object({\n          sets: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb sets is required\"),\n          reps: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb reps is required\"),\n          weight: yup.number().positive().required(\"Weight is required\"),\n          grade: yup.number().positive().max(10).required(\"Grade is required\"),\n        })\n      ),\n    })\n  ),\n});\n\nconst CreateWorkout: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  useIsAuth();\n  const [createWorkout] = useCreateWorkoutMutation();\n  const { data: templates } = useTemplatesQuery();\n  const { data: exo } = useExoQuery();\n  const exoItems = exo?.exo?.map((e) => {\n    return (\n      <option value={e.exoId} key={e.exoId}>\n        {e.exoDesc}\n      </option>\n    );\n  });\n  const [tpInput, setTpInput] = useState<WorkoutInput>({\n    workoutType: \"\",\n    workoutDt: \"\",\n    workoutDesc: \"\",\n    workoutDetails: [],\n  });\n  const initValueForm: Record<number, WorkoutInput> = {};\n  const templatesName = templates?.templates?.map((t) => {\n    initValueForm[t.id] = {\n      workoutType: t.templateType,\n      workoutDt: \"\",\n      workoutDesc: \"\",\n      workoutDetails: t.templateDetails.map((td) => {\n        return {\n          exoId: \"\" + td.exoId,\n          exoDetail: td.exoDetail.map((e) => {\n            return {\n              sets: e.sets,\n              reps: e.reps,\n              weight: e.weight,\n              grade: e.grade,\n              rest: e.rest,\n              feedback: e.feedback,\n            };\n          }),\n        };\n      }),\n    };\n\n    return (\n      <option value={t.id} key={t.id}>\n        {t.name}\n      </option>\n    );\n  });\n  return (\n    <Layout>\n      <Box mr={{ sd: \"none\", md: \"15%\" }} ml={{ sd: \"none\", md: \"15%\" }}>\n        <Formik\n          enableReinitialize={true}\n          initialValues={tpInput}\n          validationSchema={validationSchema}\n          onSubmit={async (values) => {\n            const { errors } = await createWorkout({\n              variables: { options: values },\n              update: (cache) => {\n                cache.evict({ fieldName: \"workouts:{}\" });\n              },\n            });\n            if (!errors) {\n              router.push(\"/\");\n            }\n          }}\n        >\n          {({ isSubmitting, values }) => (\n            <Form>\n              <Flex>\n                <InputField\n                  name=\"workoutType\"\n                  placeholder=\"Workout Type\"\n                  label=\"Workout Type\"\n                />\n                <InputField\n                  name=\"workoutDt\"\n                  type=\"date\"\n                  placeholder=\"Workout Date\"\n                  label=\"Workout Date\"\n                />\n                {templates?.templates?.length !== 0 ? (\n                  <FormControl>\n                    <FormLabel htmlFor=\"templatesName\">Template List</FormLabel>\n                    <Field\n                      as={Select}\n                      name=\"templatesName\"\n                      label=\"Template List\"\n                      type=\"select\"\n                      onChange={(t) => {\n                        if (parseInt(t.target.value, 10) === 0) {\n                          setTpInput({\n                            workoutType: \"\",\n                            workoutDesc: \"\",\n                            workoutDt: \"\",\n                            workoutDetails: [],\n                          });\n                        } else {\n                          setTpInput(initValueForm[t.target.value]);\n                        }\n                      }}\n                    >\n                      <option value=\"0\" key=\"0\"></option>\n                      {templatesName}\n                    </Field>\n                  </FormControl>\n                ) : null}\n              </Flex>\n              <FieldArray name=\"workoutDetails\">\n                {(arrayHelpers) => (\n                  <div>\n                    <Button\n                      onClick={() =>\n                        arrayHelpers.push({\n                          exoId: \"\",\n                          exoDetail: [\n                            {\n                              sets: \"\",\n                              reps: \"\",\n                              weight: \"\",\n                              grade: \"\",\n                              rest: 0,\n                              feedback: \"\",\n                            },\n                          ],\n                        })\n                      }\n                    >\n                      add exercise\n                    </Button>\n                    {values.workoutDetails.map((unitExo, index) => {\n                      return (\n                        <Box>\n                          <Flex>\n                            <Field\n                              as={Select}\n                              name={`workoutDetails.${index}.exoId`}\n                              type=\"select\"\n                            >\n                              {exoItems}\n                            </Field>\n                            <IconButton\n                              as={Button}\n                              icon=\"delete\"\n                              aria-label=\"Delete exercise\"\n                              onClick={() => arrayHelpers.remove(index)}\n                            />\n                          </Flex>\n                          <Flex>\n                            <FieldArray name=\"exoDetail\">\n                              <div>\n                                {unitExo.exoDetail.map(\n                                  (_unitExoDetail, exoIndex) => {\n                                    return (\n                                      <Flex>\n                                        <InputField\n                                          name={`workoutDetails.${index}.exoDetail.${exoIndex}.sets`}\n                                          placeholder=\"sets\"\n                                          type=\"number\"\n                                        />\n                                        <InputField\n                                          name={`workoutDetails.${index}.exoDetail.${exoIndex}.reps`}\n                                          placeholder=\"reps\"\n                                          type=\"number\"\n                                        />\n                                        <InputField\n                                          name={`workoutDetails.${index}.exoDetail.${exoIndex}.weight`}\n                                          placeholder=\"weight\"\n                                          type=\"number\"\n                                        />\n                                        <InputField\n                                          name={`workoutDetails.${index}.exoDetail.${exoIndex}.grade`}\n                                          placeholder=\"grade\"\n                                          type=\"number\"\n                                        />\n                                        <InputField\n                                          name={`workoutDetails.${index}.exoDetail.${exoIndex}.rest`}\n                                          placeholder=\"rest\"\n                                          type=\"number\"\n                                        />\n                                        <InputField\n                                          as={Textarea}\n                                          name={`workoutDetails.${index}.exoDetail.${exoIndex}.feedback`}\n                                          placeholder=\"feedback\"\n                                          textarea\n                                        />\n                                        <IconButton\n                                          as={Button}\n                                          icon=\"delete\"\n                                          aria-label=\"Delete Exo Detail\"\n                                          onClick={() => {\n                                            unitExo.exoDetail.splice(\n                                              exoIndex,\n                                              1\n                                            );\n                                            arrayHelpers.replace(\n                                              index,\n                                              unitExo\n                                            );\n                                          }}\n                                        />\n                                        <IconButton\n                                          as={Button}\n                                          icon=\"add\"\n                                          aria-label=\"Add Exo Detail\"\n                                          onClick={() => {\n                                            unitExo.exoDetail.splice(\n                                              exoIndex + 1,\n                                              0,\n                                              {\n                                                sets: \"\",\n                                                reps: \"\",\n                                                weight: \"\",\n                                                grade: \"\",\n                                                rest: 0,\n                                                feedback: \"\",\n                                              }\n                                            );\n                                            arrayHelpers.replace(\n                                              index,\n                                              unitExo\n                                            );\n                                          }}\n                                        />\n                                      </Flex>\n                                    );\n                                  }\n                                )}\n                              </div>\n                            </FieldArray>\n                          </Flex>\n                        </Box>\n                      );\n                    })}\n                  </div>\n                )}\n              </FieldArray>\n              <Button\n                mt={4}\n                type=\"submit\"\n                isLoading={isSubmitting}\n                variantColor=\"teal\"\n              >\n                create workout\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: false })(CreateWorkout);\n"]},"metadata":{},"sourceType":"module"}