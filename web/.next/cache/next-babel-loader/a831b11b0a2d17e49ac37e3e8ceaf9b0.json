{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/components/DaySection.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Box, Flex, Text } from \"@chakra-ui/core\";\nimport { useExoQuery } from \"../generated/graphql\";\nexport var DaySection = function DaySection(_ref) {\n  _s();\n\n  var _exo$exo, _workout$workoutDetai;\n\n  var workout = _ref.workout;\n\n  var _useExoQuery = useExoQuery(),\n      exo = _useExoQuery.data;\n\n  var exoIdtoExoDesc = {};\n  exo === null || exo === void 0 ? void 0 : (_exo$exo = exo.exo) === null || _exo$exo === void 0 ? void 0 : _exo$exo.forEach(function (e) {\n    exoIdtoExoDesc[e.exoId] = e.exoDesc;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: workout ? /*#__PURE__*/_jsxDEV(Box // display={{ sm: \"flex\", md: \"block\" }}\n    , {\n      p: 5,\n      minH: {\n        sm: \"auto\",\n        md: \"300px\"\n      },\n      minW: {\n        sm: \"auto\",\n        md: \"300px\"\n      },\n      shadow: \"md\",\n      borderWidth: \"1px\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: \"auto\",\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            ml: \"auto\",\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              ml: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                children: workout.workoutType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, _this), workout === null || workout === void 0 ? void 0 : (_workout$workoutDetai = workout.workoutDetails) === null || _workout$workoutDetai === void 0 ? void 0 : _workout$workoutDetai.map(function (d) {\n            return !d ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: [\" \", exoIdtoExoDesc[d.exoId], \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, _this), d.exoDetail.map(function (e) {\n                return !e ? null : /*#__PURE__*/_jsxDEV(Text, {\n                  children: [\" \", e.sets, \" / \", e.weight, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 25\n                }, _this);\n              })]\n            }, void 0, true);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, _this) : null\n  }, void 0, false);\n};\n\n_s(DaySection, \"ABLt//Lkdk9xLW/mjknvLuLIFj0=\", false, function () {\n  return [useExoQuery];\n});\n\n_c = DaySection;\n\nvar _c;\n\n$RefreshReg$(_c, \"DaySection\");","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/components/DaySection.tsx"],"names":["React","Box","Flex","Text","useExoQuery","DaySection","workout","exo","data","exoIdtoExoDesc","forEach","e","exoId","exoDesc","sm","md","workoutType","workoutDetails","map","d","exoDetail","sets","weight"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAsBC,IAAtB,EAA8CC,IAA9C,QAA0D,iBAA1D;AACA,SAAiCC,WAAjC,QAAoD,sBAApD;AAMA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAAiB;AAAA;;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,qBAC9CF,WAAW,EADmC;AAAA,MACtDG,GADsD,gBAC5DC,IAD4D;;AAGpE,MAAMC,cAAsC,GAAG,EAA/C;AACAF,EAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,wBAAAA,GAAG,CAAEA,GAAL,sDAAUG,OAAV,CAAkB,UAACC,CAAD,EAAO;AACvBF,IAAAA,cAAc,CAACE,CAAC,CAACC,KAAH,CAAd,GAA0BD,CAAC,CAACE,OAA5B;AACD,GAFD;AAIA,sBACE;AAAA,cACGP,OAAO,gBACN,QAAC,GAAD,CACE;AADF;AAEE,MAAA,CAAC,EAAE,CAFL;AAGE,MAAA,IAAI,EAAE;AAAEQ,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,EAAE,EAAE;AAAlB,OAHR;AAIE,MAAA,IAAI,EAAE;AAAED,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,EAAE,EAAE;AAAlB,OAJR;AAKE,MAAA,MAAM,EAAC,IALT;AAME,MAAA,WAAW,EAAC,KANd;AAAA,6BAQE,QAAC,IAAD;AAAM,QAAA,aAAa,EAAE,QAArB;AAA+B,QAAA,KAAK,EAAC,QAArC;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,MAAT;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,MAAT;AAAgB,YAAA,KAAK,EAAC,QAAtB;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,MAAT;AAAA,qCACE,QAAC,IAAD;AAAA,0BAAOT,OAAO,CAACU;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,EAMGV,OANH,aAMGA,OANH,gDAMGA,OAAO,CAAEW,cANZ,0DAMG,sBAAyBC,GAAzB,CAA6B,UAACC,CAAD;AAAA,mBAC5B,CAACA,CAAD,GAAK,IAAL,gBACE;AAAA,sCACE,QAAC,IAAD;AAAA,gCAAQV,cAAc,CAACU,CAAC,CAACP,KAAH,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGO,CAAC,CAACC,SAAF,CAAYF,GAAZ,CAAgB,UAACP,CAAD;AAAA,uBACf,CAACA,CAAD,GAAK,IAAL,gBACE,QAAC,IAAD;AAAA,6BACG,GADH,EAEGA,CAAC,CAACU,IAFL,SAEcV,CAAC,CAACW,MAFhB,EAEwB,GAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFa;AAAA,eAAhB,CAFH;AAAA,4BAF0B;AAAA,WAA7B,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,aADM,GAkCJ;AAnCN,mBADF;AAuCD,CA/CM;;GAAMjB,U;UACWD,W;;;KADXC,U","sourcesContent":["import React from \"react\";\nimport { Box, Button, Flex, IconButton, Link, Text } from \"@chakra-ui/core\";\nimport { RegularWorkoutFragment, useExoQuery } from \"../generated/graphql\";\n\ninterface DaySectionProps {\n  workout: RegularWorkoutFragment;\n}\n\nexport const DaySection: React.FC<DaySectionProps> = ({ workout }) => {\n  const { data: exo } = useExoQuery();\n\n  const exoIdtoExoDesc: Record<number, string> = {};\n  exo?.exo?.forEach((e) => {\n    exoIdtoExoDesc[e.exoId] = e.exoDesc;\n  });\n\n  return (\n    <>\n      {workout ? (\n        <Box\n          // display={{ sm: \"flex\", md: \"block\" }}\n          p={5}\n          minH={{ sm: \"auto\", md: \"300px\" }}\n          minW={{ sm: \"auto\", md: \"300px\" }}\n          shadow=\"md\"\n          borderWidth=\"1px\"\n        >\n          <Flex flexDirection={\"column\"} align=\"center\">\n            <Box mb={\"auto\"}>\n              <Flex ml=\"auto\" align=\"center\">\n                <Box ml={\"auto\"}>\n                  <Text>{workout.workoutType}</Text>\n                </Box>\n              </Flex>\n              {workout?.workoutDetails?.map((d) =>\n                !d ? null : (\n                  <>\n                    <Text> {exoIdtoExoDesc[d.exoId]} </Text>\n                    {d.exoDetail.map((e) =>\n                      !e ? null : (\n                        <Text>\n                          {\" \"}\n                          {e.sets} / {e.weight}{\" \"}\n                        </Text>\n                      )\n                    )}\n                  </>\n                )\n              )}\n            </Box>\n          </Flex>\n        </Box>\n      ) : null}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}