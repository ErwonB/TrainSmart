{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Button } from \"@chakra-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport { useCreateWorkoutMutation } from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\n\nvar CreatePost = function CreatePost(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  useIsAuth();\n\n  var _useCreateWorkoutMuta = useCreateWorkoutMutation(),\n      _useCreateWorkoutMuta2 = _slicedToArray(_useCreateWorkoutMuta, 1),\n      createWorkout = _useCreateWorkoutMuta2[0];\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: \"\",\n        text: \"\"\n      } // onSubmit={async (values) => {\n      //   const { errors } = await createWorkout({\n      //     variables: { input: values },\n      //     update: (cache) => {\n      //       cache.evict({ fieldName: \"posts:{}\" });\n      //     },\n      //   });\n      //   if (!errors) {\n      //     router.push(\"/\");\n      //   }\n      // }}\n      ,\n      children: function children(_ref2) {\n        var isSubmitting = _ref2.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"title\",\n            placeholder: \"title\",\n            label: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              textarea: true,\n              name: \"text\",\n              placeholder: \"text...\",\n              label: \"Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            isLoading: isSubmitting,\n            variantColor: \"teal\",\n            children: \"create workout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreatePost, \"m2DFxXYHBihpYcfbFLEGT8zoMVg=\", false, function () {\n  return [useRouter, useIsAuth, useCreateWorkoutMutation];\n});\n\n_c = CreatePost;\nexport default withApollo({\n  ssr: false\n})(CreatePost);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx"],"names":["Box","Button","Form","Formik","useRouter","React","InputField","Layout","useCreateWorkoutMutation","useIsAuth","withApollo","CreatePost","router","createWorkout","title","text","isSubmitting","ssr"],"mappings":";;;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAAQC,wBAAR,QAAuC,sBAAvC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,IAAMC,UAAwB,GAAG,SAA3BA,UAA2B,OAAQ;AAAA;;AAAA;;AACvC,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AACAK,EAAAA,SAAS;;AAF8B,8BAGfD,wBAAwB,EAHT;AAAA;AAAA,MAGhCK,aAHgC;;AAIvC,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OADjB,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZF;AAAA,gBAcG;AAAA,YAAGC,YAAH,SAAGA,YAAH;AAAA,4BACC,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAyB,YAAA,WAAW,EAAC,OAArC;AAA6C,YAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,QAAQ,MADV;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,WAAW,EAAC,SAHd;AAIE,cAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBAFF,eAUE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,SAAS,EAAEA,YAHb;AAIE,YAAA,YAAY,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD;AAAA;AAdH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAwCD,CA5CD;;GAAML,U;UACWP,S,EACfK,S,EACwBD,wB;;;KAHpBG,U;AA8CN,eAAeD,UAAU,CAAC;AAAEO,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2BN,UAA3B,CAAf","sourcesContent":["import { Box, Button } from \"@chakra-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport {useCreateWorkoutMutation} from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\n\nconst CreatePost: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  useIsAuth();\n  const [createWorkout] = useCreateWorkoutMutation();\n  return (\n    <Layout variant=\"small\">\n      <Formik\n        initialValues={{ title: \"\", text: \"\" }}\n        // onSubmit={async (values) => {\n        //   const { errors } = await createWorkout({\n        //     variables: { input: values },\n        //     update: (cache) => {\n        //       cache.evict({ fieldName: \"posts:{}\" });\n        //     },\n        //   });\n        //   if (!errors) {\n        //     router.push(\"/\");\n        //   }\n        // }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField name=\"title\" placeholder=\"title\" label=\"Title\" />\n            <Box mt={4}>\n              <InputField\n                textarea\n                name=\"text\"\n                placeholder=\"text...\"\n                label=\"Body\"\n              />\n            </Box>\n            <Button\n              mt={4}\n              type=\"submit\"\n              isLoading={isSubmitting}\n              variantColor=\"teal\"\n            >\n              create workout\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: false })(CreatePost);\n"]},"metadata":{},"sourceType":"module"}