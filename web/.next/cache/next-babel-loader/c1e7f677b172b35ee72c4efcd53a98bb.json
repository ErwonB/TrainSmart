{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/components/ChangeProfile.tsx\";\nimport React from \"react\";\nimport { FormControl, FormLabel, Select } from \"@chakra-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useApolloClient } from \"@apollo/client\";\nimport { useChangeProfileMutation } from \"../generated/graphql\";\nimport * as yup from \"yup\";\nimport { Field, Formik } from \"formik\";\nimport { InputField } from \"./InputField\";\nconst validationSchema = yup.object({\n  templateDetails: yup.array().of(yup.object({\n    exoDetail: yup.array().of(yup.object({\n      sets: yup.number().integer().positive().required(\"Nb sets is required\"),\n      reps: yup.number().integer().positive().required(\"Nb reps is required\"),\n      weight: yup.number().positive().required(\"Weight is required\"),\n      grade: yup.number().positive().max(10).required(\"Grade is required\")\n    }))\n  })),\n  trainingFrequency: yup.number().positive()\n});\nexport const ChangeProfile = ({\n  profile\n}) => {\n  const apolloClient = useApolloClient();\n  const router = useRouter();\n  const [changeProfile] = useChangeProfileMutation();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: profile,\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      await changeProfile({\n        variables: {\n          options: values\n        }\n      });\n      await apolloClient.resetStore();\n      router.push(\"/\");\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: \"lang_cd\",\n        children: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        as: Select,\n        name: \"lang_cd\",\n        label: \"Language\",\n        type: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"FR\",\n          children: \"FR\"\n        }, \"FR\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"EN\",\n          children: \"EN\"\n        }, \"EN\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      name: \"trainingFrequency\",\n      placeholder: \"Training Frequency\",\n      label: \"Training Frequency\",\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      name: \"trainingType\",\n      placeholder: \"Training Type\",\n      label: \"Training Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: \"sex\",\n        children: \"Sex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        as: Select,\n        name: \"sex\",\n        label: \"Sex\",\n        type: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"M\",\n          children: \"M\"\n        }, \"M\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"F\",\n          children: \"F\"\n        }, \"F\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/components/ChangeProfile.tsx"],"names":["React","FormControl","FormLabel","Select","useRouter","useApolloClient","useChangeProfileMutation","yup","Field","Formik","InputField","validationSchema","object","templateDetails","array","of","exoDetail","sets","number","integer","positive","required","reps","weight","grade","max","trainingFrequency","ChangeProfile","profile","apolloClient","router","changeProfile","values","variables","options","resetStore","push"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormControl, FormLabel, Select } from \"@chakra-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useApolloClient } from \"@apollo/client\";\nimport {\n  RegularProfileFragment,\n  useChangeProfileMutation,\n} from \"../generated/graphql\";\nimport * as yup from \"yup\";\nimport { Field, Formik } from \"formik\";\nimport { InputField } from \"./InputField\";\n\ninterface ChangeProfileProps {\n  profile: RegularProfileFragment;\n}\n\nconst validationSchema = yup.object({\n  templateDetails: yup.array().of(\n    yup.object({\n      exoDetail: yup.array().of(\n        yup.object({\n          sets: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb sets is required\"),\n          reps: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb reps is required\"),\n          weight: yup.number().positive().required(\"Weight is required\"),\n          grade: yup.number().positive().max(10).required(\"Grade is required\"),\n        })\n      ),\n    })\n  ),\n  trainingFrequency: yup.number().positive(),\n});\n\nexport const ChangeProfile: React.FC<ChangeProfileProps> = ({ profile }) => {\n  const apolloClient = useApolloClient();\n  const router = useRouter();\n  const [changeProfile] = useChangeProfileMutation();\n\n  return (\n    <Formik\n      initialValues={profile}\n      validationSchema={validationSchema}\n      onSubmit={async (values) => {\n        await changeProfile({ variables: { options: values } });\n        await apolloClient.resetStore();\n        router.push(\"/\");\n      }}\n    >\n      <FormControl>\n        <FormLabel htmlFor=\"lang_cd\">Language</FormLabel>\n        <Field as={Select} name=\"lang_cd\" label=\"Language\" type=\"select\">\n          <option value=\"FR\" key=\"FR\">\n            FR\n          </option>\n          <option value=\"EN\" key=\"EN\">\n            EN\n          </option>\n        </Field>\n      </FormControl>\n      <InputField\n        name=\"trainingFrequency\"\n        placeholder=\"Training Frequency\"\n        label=\"Training Frequency\"\n        type=\"number\"\n      />\n      <InputField\n        name=\"trainingType\"\n        placeholder=\"Training Type\"\n        label=\"Training Type\"\n      />\n      <FormControl>\n        <FormLabel htmlFor=\"sex\">Sex</FormLabel>\n        <Field as={Select} name=\"sex\" label=\"Sex\" type=\"select\">\n          <option value=\"M\" key=\"M\">\n            M\n          </option>\n          <option value=\"F\" key=\"F\">\n            F\n          </option>\n        </Field>\n      </FormControl>\n    </Formik>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}