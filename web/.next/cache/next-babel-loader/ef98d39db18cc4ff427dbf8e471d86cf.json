{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Flex, MenuItem, Select } from \"@chakra-ui/core\";\nimport { Field, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport { useCreateWorkoutMutation, useExoQuery } from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\n\nvar CreatePost = function CreatePost(_ref) {\n  _s();\n\n  var _exo$exo;\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  useIsAuth();\n\n  var _useCreateWorkoutMuta = useCreateWorkoutMutation(),\n      _useCreateWorkoutMuta2 = _slicedToArray(_useCreateWorkoutMuta, 1),\n      createWorkout = _useCreateWorkoutMuta2[0];\n\n  var _useExoQuery = useExoQuery(),\n      exo = _useExoQuery.data;\n\n  var exoIdtoExoDesc = {};\n  exo === null || exo === void 0 ? void 0 : (_exo$exo = exo.exo) === null || _exo$exo === void 0 ? void 0 : _exo$exo.forEach(function (e) {\n    exoIdtoExoDesc[e.id] = e.exoDesc;\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        workoutType: \"\",\n        workoutDt: \"\",\n        workoutDetails: []\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  //   const { errors } = await createWorkout({\n                  //     variables: { input: values },\n                  //     update: (cache) => {\n                  //       cache.evict({ fieldName: \"posts:{}\" });\n                  //     },\n                  //   });\n                  //   if (!errors) {\n                  //     router.push(\"/\");\n                  //   }\n                  console.log(values);\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref3) {\n        var _exo$exo2;\n\n        var isSubmitting = _ref3.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              name: \"workoutType\",\n              placeholder: \"Workout Type\",\n              label: \"Workout Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"workoutDt\",\n              type: \"date\",\n              placeholder: \"Workout Date\",\n              label: \"Workout Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Field, {\n            as: Select,\n            name: \"workoutDetails[0].exoId\",\n            type: \"select\",\n            children: exo === null || exo === void 0 ? void 0 : (_exo$exo2 = exo.exo) === null || _exo$exo2 === void 0 ? void 0 : _exo$exo2.forEach(function (e) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: e.id,\n                children: e.exoDesc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"workoutDetails[1].exoId\",\n            placeholder: \"Exercise\",\n            label: \"Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            isLoading: isSubmitting,\n            variantColor: \"teal\",\n            children: \"create workout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreatePost, \"Mzx49Nx7iW6k7LSBwTspzo40smI=\", false, function () {\n  return [useRouter, useIsAuth, useCreateWorkoutMutation, useExoQuery];\n});\n\n_c = CreatePost;\nexport default withApollo({\n  ssr: false\n})(CreatePost);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx"],"names":["Button","Flex","MenuItem","Select","Field","Form","Formik","useRouter","React","InputField","Layout","useCreateWorkoutMutation","useExoQuery","useIsAuth","withApollo","CreatePost","router","createWorkout","exo","data","exoIdtoExoDesc","forEach","e","id","exoDesc","workoutType","workoutDt","workoutDetails","values","console","log","isSubmitting","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, MenuItem, Select } from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport {useCreateWorkoutMutation, useExoQuery} from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\n\nconst CreatePost: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  useIsAuth();\n  const [createWorkout] = useCreateWorkoutMutation();\n  const {data: exo} = useExoQuery();\n\n  const exoIdtoExoDesc: Record<number, string> = {};\n  exo?.exo?.forEach((e) => {\n    exoIdtoExoDesc[e.id] = e.exoDesc;\n  });\n  return (\n    <Layout variant=\"small\">\n      <Formik\n        initialValues={{ workoutType: \"\", workoutDt: \"\", workoutDetails: []}}\n        onSubmit={async (values) => {\n        //   const { errors } = await createWorkout({\n        //     variables: { input: values },\n        //     update: (cache) => {\n        //       cache.evict({ fieldName: \"posts:{}\" });\n        //     },\n        //   });\n        //   if (!errors) {\n        //     router.push(\"/\");\n        //   }\n        console.log(values)\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Flex>\n            <InputField name=\"workoutType\" placeholder=\"Workout Type\" label=\"Workout Type\" />\n            <InputField name=\"workoutDt\" type=\"date\" placeholder=\"Workout Date\" label=\"Workout Date\" />\n            </Flex>\n            <Field as={Select} name=\"workoutDetails[0].exoId\" type='select'>\n                { exo?.exo?.forEach((e) => \n                    (\n                        <MenuItem value={e.id}>{e.exoDesc}</MenuItem>\n                    )\n                ) }\n            </Field>\n            <InputField name=\"workoutDetails[1].exoId\" placeholder=\"Exercise\" label=\"Exercise\" />\n            <Button\n              mt={4}\n              type=\"submit\"\n              isLoading={isSubmitting}\n              variantColor=\"teal\"\n            >\n              create workout\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: false })(CreatePost);\n"]},"metadata":{},"sourceType":"module"}