{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/components/ChangeProfile.tsx\";\nimport React from \"react\";\nimport { Box, FormControl, FormLabel, Select } from \"@chakra-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useApolloClient } from \"@apollo/client\";\nimport { useChangeProfileMutation } from \"../generated/graphql\";\nimport * as yup from \"yup\";\nimport { Field, Formik } from \"formik\";\nimport { InputField } from \"./InputField\";\nconst validationSchema = yup.object({\n  trainingFrequency: yup.number().positive()\n});\nexport const ChangeProfile = ({\n  profile\n}) => {\n  const apolloClient = useApolloClient();\n  const router = useRouter();\n  const [changeProfile] = useChangeProfileMutation();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: !profile ? {\n        lang_cd: \"\",\n        trainingFrequency: 0,\n        trainingType: \"\",\n        sex: \"\"\n      } : {\n        lang_cd: profile.lang_cd,\n        trainingType: profile.trainingType,\n        trainingFrequency: profile.trainingFrequency,\n        sex: profile.sex\n      },\n      validationSchema: validationSchema,\n      onSubmit: async values => {\n        await changeProfile({\n          variables: {\n            options: {\n              lang_cd: values.lang_cd,\n              trainingType: values.trainingType,\n              trainingFrequency: values.trainingFrequency,\n              sex: values.sex\n            }\n          }\n        });\n        await apolloClient.resetStore();\n        router.push(\"/\");\n      },\n      children: ({\n        isSubmitting,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"lang_cd\",\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: Select,\n            name: \"lang_cd\",\n            label: \"Language\",\n            type: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"FR\",\n              children: \"FR\"\n            }, \"FR\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EN\",\n              children: \"EN\"\n            }, \"EN\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          name: \"trainingFrequency\",\n          placeholder: \"Training Frequency\",\n          label: \"Training Frequency\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          name: \"trainingType\",\n          placeholder: \"Training Type\",\n          label: \"Training Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"sex\",\n            children: \"Sex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: Select,\n            name: \"sex\",\n            label: \"Sex\",\n            type: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"M\",\n              children: \"M\"\n            }, \"M\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"F\",\n              children: \"F\"\n            }, \"F\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/components/ChangeProfile.tsx"],"names":["React","Box","FormControl","FormLabel","Select","useRouter","useApolloClient","useChangeProfileMutation","yup","Field","Formik","InputField","validationSchema","object","trainingFrequency","number","positive","ChangeProfile","profile","apolloClient","router","changeProfile","lang_cd","trainingType","sex","values","variables","options","resetStore","push","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Box, FormControl, FormLabel, Select } from \"@chakra-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useApolloClient } from \"@apollo/client\";\nimport {\n  RegularProfileFragment,\n  useChangeProfileMutation,\n} from \"../generated/graphql\";\nimport * as yup from \"yup\";\nimport { Field, Formik } from \"formik\";\nimport { InputField } from \"./InputField\";\n\ninterface ChangeProfileProps {\n  profile: RegularProfileFragment | null;\n}\n\nconst validationSchema = yup.object({\n  trainingFrequency: yup.number().positive(),\n});\n\nexport const ChangeProfile: React.FC<ChangeProfileProps> = ({ profile }) => {\n  const apolloClient = useApolloClient();\n  const router = useRouter();\n  const [changeProfile] = useChangeProfileMutation();\n\n  return (\n    <Box>\n      <Formik\n        initialValues={\n          !profile\n            ? { lang_cd: \"\", trainingFrequency: 0, trainingType: \"\", sex: \"\" }\n            : {\n                lang_cd: profile.lang_cd,\n                trainingType: profile.trainingType,\n                trainingFrequency: profile.trainingFrequency,\n                sex: profile.sex,\n              }\n        }\n        validationSchema={validationSchema}\n        onSubmit={async (values) => {\n          await changeProfile({\n            variables: {\n              options: {\n                lang_cd: values.lang_cd,\n                trainingType: values.trainingType,\n                trainingFrequency: values.trainingFrequency,\n                sex: values.sex,\n              },\n            },\n          });\n          await apolloClient.resetStore();\n          router.push(\"/\");\n        }}\n      >\n        {({ isSubmitting, values }) => (\n          <Form>\n            <FormControl>\n              <FormLabel htmlFor=\"lang_cd\">Language</FormLabel>\n              <Field as={Select} name=\"lang_cd\" label=\"Language\" type=\"select\">\n                <option value=\"FR\" key=\"FR\">\n                  FR\n                </option>\n                <option value=\"EN\" key=\"EN\">\n                  EN\n                </option>\n              </Field>\n            </FormControl>\n            <InputField\n              name=\"trainingFrequency\"\n              placeholder=\"Training Frequency\"\n              label=\"Training Frequency\"\n              type=\"number\"\n            />\n            <InputField\n              name=\"trainingType\"\n              placeholder=\"Training Type\"\n              label=\"Training Type\"\n            />\n            <FormControl>\n              <FormLabel htmlFor=\"sex\">Sex</FormLabel>\n              <Field as={Select} name=\"sex\" label=\"Sex\" type=\"select\">\n                <option value=\"M\" key=\"M\">\n                  M\n                </option>\n                <option value=\"F\" key=\"F\">\n                  F\n                </option>\n              </Field>\n            </FormControl>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}