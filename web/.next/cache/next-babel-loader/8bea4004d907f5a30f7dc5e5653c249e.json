{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/pages/workout/edit/[id].tsx\";\nimport { Box, Button, Flex, IconButton, Select, Textarea } from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../../../components/InputField\";\nimport { Layout } from \"../../../components/Layout\";\nimport { useEditWorkoutMutation, useWorkoutQuery } from \"../../../generated/graphql\";\nimport { useGetIntId } from \"../../../utils/useGetIntId\";\nimport { withApollo } from \"../../../utils/withApollo\";\nimport * as yup from 'yup';\nconst validationSchema = yup.object({\n  workoutDt: yup.date().max(new Date(new Date().setDate(new Date().getDate())), 'Can\\'t create a workout in the future'),\n  workoutDetails: yup.array().of(yup.object({\n    exoDetail: yup.array().of(yup.object({\n      sets: yup.number().integer().positive().required('Nb sets is required'),\n      reps: yup.number().integer().positive().required('Nb reps is required'),\n      weight: yup.number().positive().required('Weight is required'),\n      grade: yup.number().positive().max(10).required('Grade is required')\n    }))\n  }))\n});\n\nconst EditWorkout = ({}) => {\n  const router = useRouter();\n  const intId = useGetIntId();\n  const {\n    data,\n    loading\n  } = useWorkoutQuery({\n    skip: intId === -1,\n    variables: {\n      workoutId: intId\n    }\n  });\n  const [editWorkout] = useEditWorkoutMutation();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!(data === null || data === void 0 ? void 0 : data.workout)) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: \"could not find workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    variant: \"regular\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        workoutType: data.workoutType,\n        workoutDesc: data.workoutDesc,\n        workoutDt: data.workoutDt,\n        workoutDetails: data.workout.workoutDetails\n      },\n      validationSchema: validationSchema,\n      onSubmit: async values => {\n        await editWorkout({\n          variables: {\n            id: intId,\n            options: values\n          }\n        });\n        router.back();\n      },\n      children: ({\n        isSubmitting,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"workoutType\",\n            placeholder: \"Workout Type\",\n            label: \"Workout Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"workoutDt\",\n            type: \"date\",\n            placeholder: \"Workout Date\",\n            label: \"Workout Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"workoutDetails\",\n          children: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => arrayHelpers.push({\n                exoId: \"\",\n                exoDetail: [{\n                  sets: \"\",\n                  reps: \"\",\n                  weight: \"\",\n                  grade: \"\",\n                  rest: 0,\n                  feedback: \"\"\n                }]\n              }),\n              children: \"add exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), values.workoutDetails.map((unitExo, index) => {\n              return /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Flex, {\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    as: Select,\n                    name: `workoutDetails.${index}.exoId`,\n                    type: \"select\",\n                    children: exoItems\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    as: Button,\n                    icon: \"delete\",\n                    \"aria-label\": \"Delete exercise\",\n                    onClick: () => arrayHelpers.remove(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 26\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  children: /*#__PURE__*/_jsxDEV(FieldArray, {\n                    name: \"exoDetail\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: unitExo.exoDetail.map((_unitExoDetail, exoIndex) => {\n                        return /*#__PURE__*/_jsxDEV(Flex, {\n                          children: [/*#__PURE__*/_jsxDEV(InputField, {\n                            name: `workoutDetails.${index}.exoDetail.${exoIndex}.sets`,\n                            placeholder: \"sets\",\n                            type: \"number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 91,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                            name: `workoutDetails.${index}.exoDetail.${exoIndex}.reps`,\n                            placeholder: \"reps\",\n                            type: \"number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 92,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                            name: `workoutDetails.${index}.exoDetail.${exoIndex}.weight`,\n                            placeholder: \"weight\",\n                            type: \"number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 93,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                            name: `workoutDetails.${index}.exoDetail.${exoIndex}.grade`,\n                            placeholder: \"grade\",\n                            type: \"number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 94,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                            name: `workoutDetails.${index}.exoDetail.${exoIndex}.rest`,\n                            placeholder: \"rest\",\n                            type: \"number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 95,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                            as: Textarea,\n                            name: `workoutDetails.${index}.exoDetail.${exoIndex}.feedback`,\n                            placeholder: \"feedback\",\n                            textarea: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 96,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                            as: Button,\n                            icon: \"delete\",\n                            \"aria-label\": \"Delete Exo Detail\",\n                            onClick: () => {\n                              unitExo.exoDetail.splice(exoIndex, 1);\n                              arrayHelpers.replace(index, unitExo);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 97,\n                            columnNumber: 34\n                          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                            as: Button,\n                            icon: \"add\",\n                            \"aria-label\": \"Add Exo Detail\",\n                            onClick: () => {\n                              unitExo.exoDetail.splice(exoIndex + 1, 0, {\n                                sets: \"\",\n                                reps: \"\",\n                                weight: \"\",\n                                grade: \"\",\n                                rest: 0,\n                                feedback: \"\"\n                              });\n                              arrayHelpers.replace(index, unitExo);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 100,\n                            columnNumber: 34\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 90,\n                          columnNumber: 33\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 25\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          type: \"submit\",\n          isLoading: isSubmitting,\n          variantColor: \"teal\",\n          children: \"create workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(EditWorkout);","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/pages/workout/edit/[id].tsx"],"names":["Box","Button","Flex","IconButton","Select","Textarea","Field","FieldArray","Form","Formik","useRouter","React","InputField","Layout","useEditWorkoutMutation","useWorkoutQuery","useGetIntId","withApollo","yup","validationSchema","object","workoutDt","date","max","Date","setDate","getDate","workoutDetails","array","of","exoDetail","sets","number","integer","positive","required","reps","weight","grade","EditWorkout","router","intId","data","loading","skip","variables","workoutId","editWorkout","workout","workoutType","workoutDesc","values","id","options","back","isSubmitting","arrayHelpers","push","exoId","rest","feedback","map","unitExo","index","exoItems","remove","_unitExoDetail","exoIndex","splice","replace","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, IconButton, Select, Textarea } from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../../../components/InputField\";\nimport { Layout } from \"../../../components/Layout\";\nimport {useEditWorkoutMutation, useWorkoutQuery} from \"../../../generated/graphql\";\nimport { useGetIntId } from \"../../../utils/useGetIntId\";\nimport { withApollo } from \"../../../utils/withApollo\";\n\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n    workoutDt: yup.date().max(new Date(new Date().setDate(new Date().getDate())), 'Can\\'t create a workout in the future'),\n    workoutDetails: yup.array().of(yup.object({\n        exoDetail: yup.array().of(yup.object({\n            sets: yup.number().integer().positive().required('Nb sets is required'),\n            reps: yup.number().integer().positive().required('Nb reps is required'),\n            weight: yup.number().positive().required('Weight is required'),\n            grade: yup.number().positive().max(10).required('Grade is required'),\n        }))\n    }))\n});\n\nconst EditWorkout = ({}) => {\n  const router = useRouter();\n  const intId = useGetIntId();\n  const { data, loading } = useWorkoutQuery({\n    skip: intId === -1,\n    variables: {\n      workoutId: intId,\n    },\n  });\n  const [editWorkout] = useEditWorkoutMutation();\n  if (loading) {\n    return (\n      <Layout>\n        <div>loading...</div>\n      </Layout>\n    );\n  }\n\n  if (!data?.workout) {\n    return (\n      <Layout>\n        <Box>could not find workout</Box>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout variant=\"regular\">\n      <Formik \n        initialValues={{ workoutType: data.workoutType, workoutDesc: data.workoutDesc, workoutDt: data.workoutDt, workoutDetails: data.workout.workoutDetails}}\n        validationSchema={validationSchema}\n        onSubmit={async (values) => {\n          await editWorkout({\n            variables: { id: intId, options: values },\n          });\n          router.back();\n        }}\n      >\n        {({ isSubmitting, values}) => (\n          <Form>\n            <Flex>\n            <InputField name=\"workoutType\" placeholder=\"Workout Type\" label=\"Workout Type\" />\n            <InputField name=\"workoutDt\" type=\"date\" placeholder=\"Workout Date\" label=\"Workout Date\" />\n            </Flex>\n\t\t\t<FieldArray name=\"workoutDetails\">\n                {arrayHelpers => (\n                <div>\n                <Button onClick={() => arrayHelpers.push({\n                    exoId: \"\",\n                    exoDetail : [{sets: \"\", reps:\"\", weight:\"\", grade:\"\",rest: 0 ,feedback:\"\",} ],\n                })}>add exercise</Button>\n                {values.workoutDetails.map((unitExo, index) => {\n                    return (\n                        <Box>\n                        <Flex>\n                        <Field as={Select} name={`workoutDetails.${index}.exoId`} type='select'>\n                            {exoItems}\n                        </Field>\n                         <IconButton as={Button} icon=\"delete\" aria-label=\"Delete exercise\" onClick={() => arrayHelpers.remove(index)} />\n                         </Flex>\n                        <Flex>\n                        <FieldArray name=\"exoDetail\">\n                            <div>\n                            {unitExo.exoDetail.map((_unitExoDetail, exoIndex) => {\n                                return (\n                                <Flex>\n                                <InputField name={`workoutDetails.${index}.exoDetail.${exoIndex}.sets`} placeholder=\"sets\" type=\"number\" />\n                                <InputField name={`workoutDetails.${index}.exoDetail.${exoIndex}.reps`} placeholder=\"reps\" type=\"number\" />\n                                <InputField name={`workoutDetails.${index}.exoDetail.${exoIndex}.weight`} placeholder=\"weight\" type=\"number\" />\n                                <InputField name={`workoutDetails.${index}.exoDetail.${exoIndex}.grade`} placeholder=\"grade\" type=\"number\" />\n                                <InputField name={`workoutDetails.${index}.exoDetail.${exoIndex}.rest`} placeholder=\"rest\" type=\"number\" />\n                                <InputField as={Textarea} name={`workoutDetails.${index}.exoDetail.${exoIndex}.feedback`} placeholder=\"feedback\" textarea />\n                                 <IconButton as={Button} icon=\"delete\" aria-label=\"Delete Exo Detail\" onClick={() => {unitExo.exoDetail.splice(exoIndex, 1)\n                                 arrayHelpers.replace(index, unitExo)\n                                 }}/>\n                                 <IconButton as={Button} icon=\"add\" aria-label=\"Add Exo Detail\" onClick={() => {unitExo.exoDetail.splice(exoIndex+1, 0, {sets: \"\", reps:\"\", weight:\"\", grade:\"\",rest:0,feedback:\"\",})\n                                 arrayHelpers.replace(index, unitExo)\n                                 }}/>\n                                </Flex>\n                                )})}\n                            </div>\n                        </FieldArray>\n                        </Flex>\n                        </Box>\n                     )})}\n                </div>\n                )}\n\t\t\t</FieldArray>\n            <Button\n              mt={4}\n              type=\"submit\"\n              isLoading={isSubmitting}\n              variantColor=\"teal\"\n            >\n              create workout\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: false })(EditWorkout);\n"]},"metadata":{},"sourceType":"module"}