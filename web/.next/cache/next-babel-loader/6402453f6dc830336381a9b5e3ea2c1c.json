{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx\";\nimport { IconButton, Box, Button, Flex, Select, Textarea, FormControl, FormLabel } from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport { useCreateWorkoutMutation, useExoQuery, useTemplatesQuery } from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\nimport * as yup from \"yup\";\nconst validationSchema = yup.object({\n  workoutDt: yup.date().max(new Date(new Date().setDate(new Date().getDate())), \"Can't create a workout in the future\"),\n  workoutDetails: yup.array().of(yup.object({\n    exoDetail: yup.array().of(yup.object({\n      sets: yup.number().integer().positive().required(\"Nb sets is required\"),\n      reps: yup.number().integer().positive().required(\"Nb reps is required\"),\n      weight: yup.number().positive().required(\"Weight is required\"),\n      grade: yup.number().positive().max(10).required(\"Grade is required\")\n    }))\n  }))\n});\n\nconst CreateWorkout = ({}) => {\n  var _exo$exo, _templates$templates;\n\n  const router = useRouter();\n  useIsAuth();\n  const [createWorkout] = useCreateWorkoutMutation();\n  const {\n    data: templates\n  } = useTemplatesQuery();\n  const {\n    data: exo\n  } = useExoQuery();\n  const exoItems = exo === null || exo === void 0 ? void 0 : (_exo$exo = exo.exo) === null || _exo$exo === void 0 ? void 0 : _exo$exo.map(e => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: e.exoId,\n      children: e.exoDesc\n    }, e.exoId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  });\n  const {\n    0: tpInput,\n    1: setTpInput\n  } = useState({\n    workoutType: \"\",\n    workoutDt: \"\",\n    workoutDesc: \"\",\n    workoutDetails: []\n  });\n  const initValueForm = {};\n  const templatesName = templates === null || templates === void 0 ? void 0 : (_templates$templates = templates.templates) === null || _templates$templates === void 0 ? void 0 : _templates$templates.map(t => {\n    initValueForm[t.id] = {\n      workoutType: t.templateType,\n      workoutDt: \"\",\n      workoutDesc: \"\",\n      workoutDetails: t.templateDetails.map(td => {\n        return {\n          exoId: \"\" + td.exoId,\n          exoDetail: td.exoDetail.map(e => {\n            return {\n              sets: e.sets,\n              reps: e.reps,\n              weight: e.weight,\n              grade: e.grade,\n              rest: e.rest,\n              feedback: e.feedback\n            };\n          })\n        };\n      })\n    };\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: t.id,\n      children: t.name\n    }, t.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    variant: \"regular\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      enableReinitialize: true,\n      initialValues: tpInput,\n      validationSchema: validationSchema,\n      onSubmit: async values => {\n        const {\n          errors\n        } = await createWorkout({\n          variables: {\n            options: values\n          },\n          update: cache => {\n            cache.evict({\n              fieldName: \"workouts:{}\"\n            });\n          }\n        });\n\n        if (!errors) {\n          router.push(\"/\");\n        }\n      },\n      children: ({\n        isSubmitting,\n        values\n      }) => {\n        var _templates$templates2;\n\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              name: \"workoutType\",\n              placeholder: \"Workout Type\",\n              label: \"Workout Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"workoutDt\",\n              type: \"date\",\n              placeholder: \"Workout Date\",\n              label: \"Workout Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), (templates === null || templates === void 0 ? void 0 : (_templates$templates2 = templates.templates) === null || _templates$templates2 === void 0 ? void 0 : _templates$templates2.length) !== 0 ? /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"templatesName\",\n                children: \"Template List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: Select,\n                name: \"templatesName\",\n                label: \"Template List\",\n                type: \"select\",\n                onChange: t => {\n                  if (parseInt(t.target.value, 10) === 0) {\n                    setTpInput({\n                      workoutType: \"\",\n                      workoutDesc: \"\",\n                      workoutDt: \"\",\n                      workoutDetails: []\n                    });\n                  } else {\n                    setTpInput(initValueForm[t.target.value]);\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\"\n                }, \"0\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this), templatesName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n            name: \"workoutDetails\",\n            children: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => arrayHelpers.push({\n                  exoId: \"\",\n                  exoDetail: [{\n                    sets: \"\",\n                    reps: \"\",\n                    weight: \"\",\n                    grade: \"\",\n                    rest: 0,\n                    feedback: \"\"\n                  }]\n                }),\n                children: \"add exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), values.workoutDetails.map((unitExo, index) => {\n                return /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Flex, {\n                    children: [/*#__PURE__*/_jsxDEV(Field, {\n                      as: Select,\n                      name: `workoutDetails.${index}.exoId`,\n                      type: \"select\",\n                      children: exoItems\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      as: Button,\n                      icon: \"delete\",\n                      \"aria-label\": \"Delete exercise\",\n                      onClick: () => arrayHelpers.remove(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                    children: /*#__PURE__*/_jsxDEV(FieldArray, {\n                      name: \"exoDetail\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: unitExo.exoDetail.map((_unitExoDetail, exoIndex) => {\n                          return /*#__PURE__*/_jsxDEV(Flex, {\n                            children: [/*#__PURE__*/_jsxDEV(InputField, {\n                              name: `workoutDetails.${index}.exoDetail.${exoIndex}.sets`,\n                              placeholder: \"sets\",\n                              type: \"number\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 209,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                              name: `workoutDetails.${index}.exoDetail.${exoIndex}.reps`,\n                              placeholder: \"reps\",\n                              type: \"number\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 214,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                              name: `workoutDetails.${index}.exoDetail.${exoIndex}.weight`,\n                              placeholder: \"weight\",\n                              type: \"number\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 219,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                              name: `workoutDetails.${index}.exoDetail.${exoIndex}.grade`,\n                              placeholder: \"grade\",\n                              type: \"number\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 224,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                              name: `workoutDetails.${index}.exoDetail.${exoIndex}.rest`,\n                              placeholder: \"rest\",\n                              type: \"number\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 229,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                              as: Textarea,\n                              name: `workoutDetails.${index}.exoDetail.${exoIndex}.feedback`,\n                              placeholder: \"feedback\",\n                              textarea: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 234,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                              as: Button,\n                              icon: \"delete\",\n                              \"aria-label\": \"Delete Exo Detail\",\n                              onClick: () => {\n                                unitExo.exoDetail.splice(exoIndex, 1);\n                                arrayHelpers.replace(index, unitExo);\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 240,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                              as: Button,\n                              icon: \"add\",\n                              \"aria-label\": \"Add Exo Detail\",\n                              onClick: () => {\n                                unitExo.exoDetail.splice(exoIndex + 1, 0, {\n                                  sets: \"\",\n                                  reps: \"\",\n                                  weight: \"\",\n                                  grade: \"\",\n                                  rest: 0,\n                                  feedback: \"\"\n                                });\n                                arrayHelpers.replace(index, unitExo);\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 249,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 208,\n                            columnNumber: 37\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            isLoading: isSubmitting,\n            variantColor: \"teal\",\n            children: \"create workout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(CreateWorkout);","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/pages/create-workout.tsx"],"names":["IconButton","Box","Button","Flex","Select","Textarea","FormControl","FormLabel","Field","FieldArray","Form","Formik","useRouter","React","useState","InputField","Layout","useCreateWorkoutMutation","useExoQuery","useTemplatesQuery","useIsAuth","withApollo","yup","validationSchema","object","workoutDt","date","max","Date","setDate","getDate","workoutDetails","array","of","exoDetail","sets","number","integer","positive","required","reps","weight","grade","CreateWorkout","router","createWorkout","data","templates","exo","exoItems","map","e","exoId","exoDesc","tpInput","setTpInput","workoutType","workoutDesc","initValueForm","templatesName","t","id","templateType","templateDetails","td","rest","feedback","name","values","errors","variables","options","update","cache","evict","fieldName","push","isSubmitting","length","parseInt","target","value","arrayHelpers","unitExo","index","remove","_unitExoDetail","exoIndex","splice","replace","ssr"],"mappings":"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","sourcesContent":["import {\n  IconButton,\n  Box,\n  Button,\n  Flex,\n  Select,\n  Textarea,\n  FormControl,\n  FormLabel,\n} from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport {\n  useCreateWorkoutMutation,\n  useExoQuery,\n  useTemplatesQuery,\n  WorkoutInput,\n} from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\nimport * as yup from \"yup\";\n\nconst validationSchema = yup.object({\n  workoutDt: yup\n    .date()\n    .max(\n      new Date(new Date().setDate(new Date().getDate())),\n      \"Can't create a workout in the future\"\n    ),\n  workoutDetails: yup.array().of(\n    yup.object({\n      exoDetail: yup.array().of(\n        yup.object({\n          sets: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb sets is required\"),\n          reps: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb reps is required\"),\n          weight: yup.number().positive().required(\"Weight is required\"),\n          grade: yup.number().positive().max(10).required(\"Grade is required\"),\n        })\n      ),\n    })\n  ),\n});\n\nconst CreateWorkout: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  useIsAuth();\n  const [createWorkout] = useCreateWorkoutMutation();\n  const { data: templates } = useTemplatesQuery();\n  const { data: exo } = useExoQuery();\n  const exoItems = exo?.exo?.map((e) => {\n    return (\n      <option value={e.exoId} key={e.exoId}>\n        {e.exoDesc}\n      </option>\n    );\n  });\n  const [tpInput, setTpInput] = useState<WorkoutInput>({\n    workoutType: \"\",\n    workoutDt: \"\",\n    workoutDesc: \"\",\n    workoutDetails: [],\n  });\n  const initValueForm: Record<number, WorkoutInput> = {};\n  const templatesName = templates?.templates?.map((t) => {\n    initValueForm[t.id] = {\n      workoutType: t.templateType,\n      workoutDt: \"\",\n      workoutDesc: \"\",\n      workoutDetails: t.templateDetails.map((td) => {\n        return {\n          exoId: \"\" + td.exoId,\n          exoDetail: td.exoDetail.map((e) => {\n            return {\n              sets: e.sets,\n              reps: e.reps,\n              weight: e.weight,\n              grade: e.grade,\n              rest: e.rest,\n              feedback: e.feedback,\n            };\n          }),\n        };\n      }),\n    };\n\n    return (\n      <option value={t.id} key={t.id}>\n        {t.name}\n      </option>\n    );\n  });\n  return (\n    <Layout variant=\"regular\">\n      <Formik\n        enableReinitialize={true}\n        initialValues={tpInput}\n        validationSchema={validationSchema}\n        onSubmit={async (values) => {\n          const { errors } = await createWorkout({\n            variables: { options: values },\n            update: (cache) => {\n              cache.evict({ fieldName: \"workouts:{}\" });\n            },\n          });\n          if (!errors) {\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting, values }) => (\n          <Form>\n            <Flex>\n              <InputField\n                name=\"workoutType\"\n                placeholder=\"Workout Type\"\n                label=\"Workout Type\"\n              />\n              <InputField\n                name=\"workoutDt\"\n                type=\"date\"\n                placeholder=\"Workout Date\"\n                label=\"Workout Date\"\n              />\n              {templates?.templates?.length !== 0 ? (\n                <FormControl>\n                  <FormLabel htmlFor=\"templatesName\">Template List</FormLabel>\n                  <Field\n                    as={Select}\n                    name=\"templatesName\"\n                    label=\"Template List\"\n                    type=\"select\"\n                    onChange={(t) => {\n                      if (parseInt(t.target.value, 10) === 0) {\n                        setTpInput({\n                          workoutType: \"\",\n                          workoutDesc: \"\",\n                          workoutDt: \"\",\n                          workoutDetails: [],\n                        });\n                      } else {\n                        setTpInput(initValueForm[t.target.value]);\n                      }\n                    }}\n                  >\n                    <option value=\"0\" key=\"0\"></option>\n                    {templatesName}\n                  </Field>\n                </FormControl>\n              ) : null}\n            </Flex>\n            <FieldArray name=\"workoutDetails\">\n              {(arrayHelpers) => (\n                <div>\n                  <Button\n                    onClick={() =>\n                      arrayHelpers.push({\n                        exoId: \"\",\n                        exoDetail: [\n                          {\n                            sets: \"\",\n                            reps: \"\",\n                            weight: \"\",\n                            grade: \"\",\n                            rest: 0,\n                            feedback: \"\",\n                          },\n                        ],\n                      })\n                    }\n                  >\n                    add exercise\n                  </Button>\n                  {values.workoutDetails.map((unitExo, index) => {\n                    return (\n                      <Box>\n                        <Flex>\n                          <Field\n                            as={Select}\n                            name={`workoutDetails.${index}.exoId`}\n                            type=\"select\"\n                          >\n                            {exoItems}\n                          </Field>\n                          <IconButton\n                            as={Button}\n                            icon=\"delete\"\n                            aria-label=\"Delete exercise\"\n                            onClick={() => arrayHelpers.remove(index)}\n                          />\n                        </Flex>\n                        <Flex>\n                          <FieldArray name=\"exoDetail\">\n                            <div>\n                              {unitExo.exoDetail.map(\n                                (_unitExoDetail, exoIndex) => {\n                                  return (\n                                    <Flex>\n                                      <InputField\n                                        name={`workoutDetails.${index}.exoDetail.${exoIndex}.sets`}\n                                        placeholder=\"sets\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`workoutDetails.${index}.exoDetail.${exoIndex}.reps`}\n                                        placeholder=\"reps\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`workoutDetails.${index}.exoDetail.${exoIndex}.weight`}\n                                        placeholder=\"weight\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`workoutDetails.${index}.exoDetail.${exoIndex}.grade`}\n                                        placeholder=\"grade\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`workoutDetails.${index}.exoDetail.${exoIndex}.rest`}\n                                        placeholder=\"rest\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        as={Textarea}\n                                        name={`workoutDetails.${index}.exoDetail.${exoIndex}.feedback`}\n                                        placeholder=\"feedback\"\n                                        textarea\n                                      />\n                                      <IconButton\n                                        as={Button}\n                                        icon=\"delete\"\n                                        aria-label=\"Delete Exo Detail\"\n                                        onClick={() => {\n                                          unitExo.exoDetail.splice(exoIndex, 1);\n                                          arrayHelpers.replace(index, unitExo);\n                                        }}\n                                      />\n                                      <IconButton\n                                        as={Button}\n                                        icon=\"add\"\n                                        aria-label=\"Add Exo Detail\"\n                                        onClick={() => {\n                                          unitExo.exoDetail.splice(\n                                            exoIndex + 1,\n                                            0,\n                                            {\n                                              sets: \"\",\n                                              reps: \"\",\n                                              weight: \"\",\n                                              grade: \"\",\n                                              rest: 0,\n                                              feedback: \"\",\n                                            }\n                                          );\n                                          arrayHelpers.replace(index, unitExo);\n                                        }}\n                                      />\n                                    </Flex>\n                                  );\n                                }\n                              )}\n                            </div>\n                          </FieldArray>\n                        </Flex>\n                      </Box>\n                    );\n                  })}\n                </div>\n              )}\n            </FieldArray>\n            <Button\n              mt={4}\n              type=\"submit\"\n              isLoading={isSubmitting}\n              variantColor=\"teal\"\n            >\n              create workout\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: false })(CreateWorkout);\n"]},"metadata":{},"sourceType":"module"}