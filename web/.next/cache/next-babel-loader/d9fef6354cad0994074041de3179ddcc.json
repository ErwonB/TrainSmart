{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/pages/template.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { IconButton, Box, Button, Flex, Select, Textarea } from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport { useCreateTemplateMutation, useExoQuery, useTemplatesQuery } from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\nimport * as yup from \"yup\";\nvar validationSchema = yup.object({\n  templateDetails: yup.array().of(yup.object({\n    exoDetail: yup.array().of(yup.object({\n      sets: yup.number().integer().positive().required(\"Nb sets is required\"),\n      reps: yup.number().integer().positive().required(\"Nb reps is required\"),\n      weight: yup.number().positive().required(\"Weight is required\"),\n      grade: yup.number().positive().max(10).required(\"Grade is required\")\n    }))\n  }))\n});\n\nvar CreateTemplate = function CreateTemplate(_ref) {\n  _s();\n\n  var _exo$exo;\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  useIsAuth();\n\n  var _useCreateTemplateMut = useCreateTemplateMutation(),\n      _useCreateTemplateMut2 = _slicedToArray(_useCreateTemplateMut, 1),\n      createTemplate = _useCreateTemplateMut2[0];\n\n  var _useTemplatesQuery = useTemplatesQuery(),\n      templates = _useTemplatesQuery.data;\n\n  var _useExoQuery = useExoQuery(),\n      exo = _useExoQuery.data;\n\n  var exoItems = exo === null || exo === void 0 ? void 0 : (_exo$exo = exo.exo) === null || _exo$exo === void 0 ? void 0 : _exo$exo.map(function (e) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: e.id,\n      children: e.exoDesc\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    variant: \"regular\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        templateType: \"\",\n        name: \"\",\n        templateDetails: []\n      },\n      validationSchema: validationSchema,\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n          var _yield$createTemplate, errors;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return createTemplate({\n                    variables: {\n                      options: values\n                    },\n                    update: function update(cache) {\n                      cache.evict({\n                        fieldName: \"templates:{}\"\n                      });\n                    }\n                  });\n\n                case 2:\n                  _yield$createTemplate = _context.sent;\n                  errors = _yield$createTemplate.errors;\n\n                  if (!errors) {\n                    router.push(\"/\");\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref3) {\n        var isSubmitting = _ref3.isSubmitting,\n            values = _ref3.values;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              name: \"templateType\",\n              placeholder: \"Template Type\",\n              label: \"Template Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"name\",\n              placeholder: \"Template name\",\n              label: \"Template name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, _this), templates ? /*#__PURE__*/_jsxDEV(Field, {\n              as: Select,\n              name: \"templates.id\",\n              type: \"select\",\n              children: templatesName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, _this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(FieldArray, {\n            name: \"templateDetails\",\n            children: function children(arrayHelpers) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: function onClick() {\n                    return arrayHelpers.push({\n                      exoId: \"\",\n                      exoDetail: [{\n                        sets: \"\",\n                        reps: \"\",\n                        weight: \"\",\n                        grade: \"\",\n                        rest: 0,\n                        feedback: \"\"\n                      }]\n                    });\n                  },\n                  children: \"add exercise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, _this), values.templateDetails.map(function (unitExo, index) {\n                  return /*#__PURE__*/_jsxDEV(Box, {\n                    children: [/*#__PURE__*/_jsxDEV(Flex, {\n                      children: [/*#__PURE__*/_jsxDEV(Field, {\n                        as: Select,\n                        name: \"templateDetails.\".concat(index, \".exoId\"),\n                        type: \"select\",\n                        children: exoItems\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 27\n                      }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                        as: Button,\n                        icon: \"delete\",\n                        \"aria-label\": \"Delete exercise\",\n                        onClick: function onClick() {\n                          return arrayHelpers.remove(index);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 27\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n                      children: /*#__PURE__*/_jsxDEV(FieldArray, {\n                        name: \"exoDetail\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: unitExo.exoDetail.map(function (_unitExoDetail, exoIndex) {\n                            return /*#__PURE__*/_jsxDEV(Flex, {\n                              children: [/*#__PURE__*/_jsxDEV(InputField, {\n                                name: \"templateDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".sets\"),\n                                placeholder: \"sets\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 146,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                name: \"templateDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".reps\"),\n                                placeholder: \"reps\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 151,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                name: \"templateDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".weight\"),\n                                placeholder: \"weight\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 156,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                name: \"templateDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".grade\"),\n                                placeholder: \"grade\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 161,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                name: \"templateDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".rest\"),\n                                placeholder: \"rest\",\n                                type: \"number\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 166,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n                                as: Textarea,\n                                name: \"templateDetails.\".concat(index, \".exoDetail.\").concat(exoIndex, \".feedback\"),\n                                placeholder: \"feedback\",\n                                textarea: true\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 171,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                                as: Button,\n                                icon: \"delete\",\n                                \"aria-label\": \"Delete Exo Detail\",\n                                onClick: function onClick() {\n                                  unitExo.exoDetail.splice(exoIndex, 1);\n                                  arrayHelpers.replace(index, unitExo);\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 177,\n                                columnNumber: 39\n                              }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                                as: Button,\n                                icon: \"add\",\n                                \"aria-label\": \"Add Exo Detail\",\n                                onClick: function onClick() {\n                                  unitExo.exoDetail.splice(exoIndex + 1, 0, {\n                                    sets: \"\",\n                                    reps: \"\",\n                                    weight: \"\",\n                                    grade: \"\",\n                                    rest: 0,\n                                    feedback: \"\"\n                                  });\n                                  arrayHelpers.replace(index, unitExo);\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 186,\n                                columnNumber: 39\n                              }, _this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 145,\n                              columnNumber: 37\n                            }, _this);\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 141,\n                          columnNumber: 29\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 140,\n                        columnNumber: 27\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 25\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 23\n                  }, _this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            isLoading: isSubmitting,\n            variantColor: \"teal\",\n            children: \"create template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateTemplate, \"LQ0CdV0iWGChtxHdtvWpRDkC7Qk=\", false, function () {\n  return [useRouter, useIsAuth, useCreateTemplateMutation, useTemplatesQuery, useExoQuery];\n});\n\n_c = CreateTemplate;\nexport default withApollo({\n  ssr: false\n})(CreateTemplate);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTemplate\");","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/pages/template.tsx"],"names":["IconButton","Box","Button","Flex","Select","Textarea","Field","FieldArray","Form","Formik","useRouter","React","InputField","Layout","useCreateTemplateMutation","useExoQuery","useTemplatesQuery","useIsAuth","withApollo","yup","validationSchema","object","templateDetails","array","of","exoDetail","sets","number","integer","positive","required","reps","weight","grade","max","CreateTemplate","router","createTemplate","templates","data","exo","exoItems","map","e","id","exoDesc","templateType","name","values","variables","options","update","cache","evict","fieldName","errors","push","isSubmitting","templatesName","arrayHelpers","exoId","rest","feedback","unitExo","index","remove","_unitExoDetail","exoIndex","splice","replace","ssr"],"mappings":"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","sourcesContent":["import {\n  IconButton,\n  Box,\n  Button,\n  Flex,\n  Select,\n  Textarea,\n} from \"@chakra-ui/core\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport {\n  useCreateTemplateMutation,\n  useExoQuery,\n  useTemplatesQuery,\n} from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\nimport * as yup from \"yup\";\n\nconst validationSchema = yup.object({\n  templateDetails: yup.array().of(\n    yup.object({\n      exoDetail: yup.array().of(\n        yup.object({\n          sets: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb sets is required\"),\n          reps: yup\n            .number()\n            .integer()\n            .positive()\n            .required(\"Nb reps is required\"),\n          weight: yup.number().positive().required(\"Weight is required\"),\n          grade: yup.number().positive().max(10).required(\"Grade is required\"),\n        })\n      ),\n    })\n  ),\n});\n\nconst CreateTemplate: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  useIsAuth();\n  const [createTemplate] = useCreateTemplateMutation();\n  const { data: templates } = useTemplatesQuery();\n  const { data: exo } = useExoQuery();\n  const exoItems = exo?.exo?.map((e) => {\n    return (\n      <option value={e.id} key={e.id}>\n        {e.exoDesc}\n      </option>\n    );\n  });\n  return (\n    <Layout variant=\"regular\">\n      <Formik\n        initialValues={{\n          templateType: \"\",\n          name: \"\",\n          templateDetails: [],\n        }}\n        validationSchema={validationSchema}\n        onSubmit={async (values) => {\n          const { errors } = await createTemplate({\n            variables: { options: values },\n            update: (cache) => {\n              cache.evict({ fieldName: \"templates:{}\" });\n            },\n          });\n          if (!errors) {\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting, values }) => (\n          <Form>\n            <Flex>\n              <InputField\n                name=\"templateType\"\n                placeholder=\"Template Type\"\n                label=\"Template Type\"\n              />\n              <InputField\n                name=\"name\"\n                placeholder=\"Template name\"\n                label=\"Template name\"\n              />\n              {templates ? (\n                <Field as={Select} name=\"templates.id\" type=\"select\">\n                  {templatesName}\n                </Field>\n              ) : null}\n            </Flex>\n            <FieldArray name=\"templateDetails\">\n              {(arrayHelpers) => (\n                <div>\n                  <Button\n                    onClick={() =>\n                      arrayHelpers.push({\n                        exoId: \"\",\n                        exoDetail: [\n                          {\n                            sets: \"\",\n                            reps: \"\",\n                            weight: \"\",\n                            grade: \"\",\n                            rest: 0,\n                            feedback: \"\",\n                          },\n                        ],\n                      })\n                    }\n                  >\n                    add exercise\n                  </Button>\n                  {values.templateDetails.map((unitExo, index) => {\n                    return (\n                      <Box>\n                        <Flex>\n                          <Field\n                            as={Select}\n                            name={`templateDetails.${index}.exoId`}\n                            type=\"select\"\n                          >\n                            {exoItems}\n                          </Field>\n                          <IconButton\n                            as={Button}\n                            icon=\"delete\"\n                            aria-label=\"Delete exercise\"\n                            onClick={() => arrayHelpers.remove(index)}\n                          />\n                        </Flex>\n                        <Flex>\n                          <FieldArray name=\"exoDetail\">\n                            <div>\n                              {unitExo.exoDetail.map(\n                                (_unitExoDetail, exoIndex) => {\n                                  return (\n                                    <Flex>\n                                      <InputField\n                                        name={`templateDetails.${index}.exoDetail.${exoIndex}.sets`}\n                                        placeholder=\"sets\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`templateDetails.${index}.exoDetail.${exoIndex}.reps`}\n                                        placeholder=\"reps\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`templateDetails.${index}.exoDetail.${exoIndex}.weight`}\n                                        placeholder=\"weight\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`templateDetails.${index}.exoDetail.${exoIndex}.grade`}\n                                        placeholder=\"grade\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        name={`templateDetails.${index}.exoDetail.${exoIndex}.rest`}\n                                        placeholder=\"rest\"\n                                        type=\"number\"\n                                      />\n                                      <InputField\n                                        as={Textarea}\n                                        name={`templateDetails.${index}.exoDetail.${exoIndex}.feedback`}\n                                        placeholder=\"feedback\"\n                                        textarea\n                                      />\n                                      <IconButton\n                                        as={Button}\n                                        icon=\"delete\"\n                                        aria-label=\"Delete Exo Detail\"\n                                        onClick={() => {\n                                          unitExo.exoDetail.splice(exoIndex, 1);\n                                          arrayHelpers.replace(index, unitExo);\n                                        }}\n                                      />\n                                      <IconButton\n                                        as={Button}\n                                        icon=\"add\"\n                                        aria-label=\"Add Exo Detail\"\n                                        onClick={() => {\n                                          unitExo.exoDetail.splice(\n                                            exoIndex + 1,\n                                            0,\n                                            {\n                                              sets: \"\",\n                                              reps: \"\",\n                                              weight: \"\",\n                                              grade: \"\",\n                                              rest: 0,\n                                              feedback: \"\",\n                                            }\n                                          );\n                                          arrayHelpers.replace(index, unitExo);\n                                        }}\n                                      />\n                                    </Flex>\n                                  );\n                                }\n                              )}\n                            </div>\n                          </FieldArray>\n                        </Flex>\n                      </Box>\n                    );\n                  })}\n                </div>\n              )}\n            </FieldArray>\n            <Button\n              mt={4}\n              type=\"submit\"\n              isLoading={isSubmitting}\n              variantColor=\"teal\"\n            >\n              create template\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: false })(CreateTemplate);\n"]},"metadata":{},"sourceType":"module"}