{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/components/ChangeProfile.tsx\";\nimport React from \"react\";\nimport { Box } from \"@chakra-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useApolloClient } from \"@apollo/client\";\nimport { useChangeProfileMutation } from \"../generated/graphql\";\nimport * as yup from \"yup\";\nimport { Formik } from \"formik\";\nconst validationSchema = yup.object({\n  trainingFrequency: yup.number().positive()\n});\nexport const ChangeProfile = ({\n  profile\n}) => {\n  const apolloClient = useApolloClient();\n  const router = useRouter();\n  const [changeProfile] = useChangeProfileMutation();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: !profile ? {\n        lang_cd: \"\",\n        trainingFrequency: 0,\n        trainingType: \"\",\n        sex: \"\"\n      } : {\n        lang_cd: profile.lang_cd,\n        trainingType: profile.trainingType,\n        trainingFrequency: profile.trainingFrequency,\n        sex: profile.sex\n      },\n      validationSchema: validationSchema,\n      onSubmit: async values => {\n        await changeProfile({\n          variables: {\n            options: {\n              lang_cd: values.lang_cd,\n              trainingType: values.trainingType,\n              trainingFrequency: values.trainingFrequency,\n              sex: values.sex\n            }\n          }\n        });\n        await apolloClient.resetStore();\n        router.push(\"/\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/components/ChangeProfile.tsx"],"names":["React","Box","useRouter","useApolloClient","useChangeProfileMutation","yup","Formik","validationSchema","object","trainingFrequency","number","positive","ChangeProfile","profile","apolloClient","router","changeProfile","lang_cd","trainingType","sex","values","variables","options","resetStore","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoD,iBAApD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAEEC,wBAFF,QAGO,sBAHP;AAIA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAgBC,MAAhB,QAA8B,QAA9B;AAOA,MAAMC,gBAAgB,GAAGF,GAAG,CAACG,MAAJ,CAAW;AAClCC,EAAAA,iBAAiB,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb;AADe,CAAX,CAAzB;AAIA,OAAO,MAAMC,aAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC1E,QAAMC,YAAY,GAAGX,eAAe,EAApC;AACA,QAAMY,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAM,CAACc,aAAD,IAAkBZ,wBAAwB,EAAhD;AAEA,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EACX,CAACS,OAAD,GACI;AAAEI,QAAAA,OAAO,EAAE,EAAX;AAAeR,QAAAA,iBAAiB,EAAE,CAAlC;AAAqCS,QAAAA,YAAY,EAAE,EAAnD;AAAuDC,QAAAA,GAAG,EAAE;AAA5D,OADJ,GAEI;AACEF,QAAAA,OAAO,EAAEJ,OAAO,CAACI,OADnB;AAEEC,QAAAA,YAAY,EAAEL,OAAO,CAACK,YAFxB;AAGET,QAAAA,iBAAiB,EAAEI,OAAO,CAACJ,iBAH7B;AAIEU,QAAAA,GAAG,EAAEN,OAAO,CAACM;AAJf,OAJR;AAWE,MAAA,gBAAgB,EAAEZ,gBAXpB;AAYE,MAAA,QAAQ,EAAE,MAAOa,MAAP,IAAkB;AAC1B,cAAMJ,aAAa,CAAC;AAClBK,UAAAA,SAAS,EAAE;AACTC,YAAAA,OAAO,EAAE;AACPL,cAAAA,OAAO,EAAEG,MAAM,CAACH,OADT;AAEPC,cAAAA,YAAY,EAAEE,MAAM,CAACF,YAFd;AAGPT,cAAAA,iBAAiB,EAAEW,MAAM,CAACX,iBAHnB;AAIPU,cAAAA,GAAG,EAAEC,MAAM,CAACD;AAJL;AADA;AADO,SAAD,CAAnB;AAUA,cAAML,YAAY,CAACS,UAAb,EAAN;AACAR,QAAAA,MAAM,CAACS,IAAP,CAAY,GAAZ;AACD;AAzBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CApCM","sourcesContent":["import React from \"react\";\nimport { Box, FormControl, FormLabel, Select } from \"@chakra-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useApolloClient } from \"@apollo/client\";\nimport {\n  RegularProfileFragment,\n  useChangeProfileMutation,\n} from \"../generated/graphql\";\nimport * as yup from \"yup\";\nimport { Field, Formik } from \"formik\";\nimport { InputField } from \"./InputField\";\n\ninterface ChangeProfileProps {\n  profile: RegularProfileFragment | null;\n}\n\nconst validationSchema = yup.object({\n  trainingFrequency: yup.number().positive(),\n});\n\nexport const ChangeProfile: React.FC<ChangeProfileProps> = ({ profile }) => {\n  const apolloClient = useApolloClient();\n  const router = useRouter();\n  const [changeProfile] = useChangeProfileMutation();\n\n  return (\n    <Box>\n      <Formik\n        initialValues={\n          !profile\n            ? { lang_cd: \"\", trainingFrequency: 0, trainingType: \"\", sex: \"\" }\n            : {\n                lang_cd: profile.lang_cd,\n                trainingType: profile.trainingType,\n                trainingFrequency: profile.trainingFrequency,\n                sex: profile.sex,\n              }\n        }\n        validationSchema={validationSchema}\n        onSubmit={async (values) => {\n          await changeProfile({\n            variables: {\n              options: {\n                lang_cd: values.lang_cd,\n                trainingType: values.trainingType,\n                trainingFrequency: values.trainingFrequency,\n                sex: values.sex,\n              },\n            },\n          });\n          await apolloClient.resetStore();\n          router.push(\"/\");\n        }}\n      ></Formik>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}