{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/mntRaspi/trainv2/web/src/components/DaySection.tsx\";\nimport React from \"react\";\nimport { Box, Flex, Heading, Text } from \"@chakra-ui/core\";\nimport { useExoQuery } from \"../generated/graphql\";\nexport const DaySection = ({\n  workout\n}) => {\n  var _exo$exo, _workout$workoutDetai;\n\n  const {\n    data: exo\n  } = useExoQuery();\n  const exoIdtoExoDesc = {};\n  exo === null || exo === void 0 ? void 0 : (_exo$exo = exo.exo) === null || _exo$exo === void 0 ? void 0 : _exo$exo.forEach(e => {\n    exoIdtoExoDesc[e.exoId] = e.exoDesc;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: workout ? /*#__PURE__*/_jsxDEV(Box, {\n      p: 5,\n      minH: {\n        sm: \"auto\",\n        md: \"300px\"\n      },\n      minW: {\n        sm: \"auto\",\n        md: \"300px\"\n      },\n      shadow: \"md\",\n      borderWidth: \"1px\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: \"auto\",\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            ml: \"auto\",\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              ml: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                children: workout.workoutType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), workout === null || workout === void 0 ? void 0 : (_workout$workoutDetai = workout.workoutDetails) === null || _workout$workoutDetai === void 0 ? void 0 : _workout$workoutDetai.map(d => !d ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              as: \"h3\",\n              size: \"lg\",\n              letterSpacing: \"-.1rem\",\n              children: [exoIdtoExoDesc[d.exoId], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this), d.exoDetail.map(e => !e ? null : /*#__PURE__*/_jsxDEV(Text, {\n              children: [e.sets, \" Sets: \", e.reps, \" Reps @ \", e.weight, \"kg\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};","map":{"version":3,"sources":["/home/pi/mntRaspi/trainv2/web/src/components/DaySection.tsx"],"names":["React","Box","Flex","Heading","Text","useExoQuery","DaySection","workout","data","exo","exoIdtoExoDesc","forEach","e","exoId","exoDesc","sm","md","workoutType","workoutDetails","map","d","exoDetail","sets","reps","weight"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EAGEC,IAHF,EAIEC,OAJF,EAOEC,IAPF,QAQO,iBARP;AASA,SAAiCC,WAAjC,QAAoD,sBAApD;AAMA,OAAO,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACpE,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAgBJ,WAAW,EAAjC;AAEA,QAAMK,cAAsC,GAAG,EAA/C;AACAD,EAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,wBAAAA,GAAG,CAAEA,GAAL,sDAAUE,OAAV,CAAmBC,CAAD,IAAO;AACvBF,IAAAA,cAAc,CAACE,CAAC,CAACC,KAAH,CAAd,GAA0BD,CAAC,CAACE,OAA5B;AACD,GAFD;AAIA,sBACE;AAAA,cACGP,OAAO,gBACN,QAAC,GAAD;AACE,MAAA,CAAC,EAAE,CADL;AAEE,MAAA,IAAI,EAAE;AAAEQ,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,EAAE,EAAE;AAAlB,OAFR;AAGE,MAAA,IAAI,EAAE;AAAED,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,EAAE,EAAE;AAAlB,OAHR;AAIE,MAAA,MAAM,EAAC,IAJT;AAKE,MAAA,WAAW,EAAC,KALd;AAAA,6BAOE,QAAC,IAAD;AAAM,QAAA,aAAa,EAAE,QAArB;AAA+B,QAAA,KAAK,EAAC,QAArC;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,MAAT;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,MAAT;AAAgB,YAAA,KAAK,EAAC,QAAtB;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,MAAT;AAAA,qCACE,QAAC,IAAD;AAAA,0BAAOT,OAAO,CAACU;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,EAMGV,OANH,aAMGA,OANH,gDAMGA,OAAO,CAAEW,cANZ,0DAMG,sBAAyBC,GAAzB,CAA8BC,CAAD,IAC5B,CAACA,CAAD,GAAK,IAAL,gBACE;AAAA,oCACE,QAAC,OAAD;AAAS,cAAA,EAAE,EAAC,IAAZ;AAAiB,cAAA,IAAI,EAAC,IAAtB;AAA2B,cAAA,aAAa,EAAE,QAA1C;AAAA,yBACGV,cAAc,CAACU,CAAC,CAACP,KAAH,CADjB,EAC4B,GAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIGO,CAAC,CAACC,SAAF,CAAYF,GAAZ,CAAiBP,CAAD,IACf,CAACA,CAAD,GAAK,IAAL,gBACE,QAAC,IAAD;AAAA,yBACGA,CAAC,CAACU,IADL,aACkBV,CAAC,CAACW,IADpB,cACkCX,CAAC,CAACY,MADpC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFH,CAJH;AAAA,0BAFH,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADM,GAkCJ;AAnCN,mBADF;AAuCD,CA/CM","sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  IconButton,\n  Link,\n  Text,\n} from \"@chakra-ui/core\";\nimport { RegularWorkoutFragment, useExoQuery } from \"../generated/graphql\";\n\ninterface DaySectionProps {\n  workout: RegularWorkoutFragment;\n}\n\nexport const DaySection: React.FC<DaySectionProps> = ({ workout }) => {\n  const { data: exo } = useExoQuery();\n\n  const exoIdtoExoDesc: Record<number, string> = {};\n  exo?.exo?.forEach((e) => {\n    exoIdtoExoDesc[e.exoId] = e.exoDesc;\n  });\n\n  return (\n    <>\n      {workout ? (\n        <Box\n          p={5}\n          minH={{ sm: \"auto\", md: \"300px\" }}\n          minW={{ sm: \"auto\", md: \"300px\" }}\n          shadow=\"md\"\n          borderWidth=\"1px\"\n        >\n          <Flex flexDirection={\"column\"} align=\"center\">\n            <Box mb={\"auto\"}>\n              <Flex ml=\"auto\" align=\"center\">\n                <Box ml={\"auto\"}>\n                  <Text>{workout.workoutType}</Text>\n                </Box>\n              </Flex>\n              {workout?.workoutDetails?.map((d) =>\n                !d ? null : (\n                  <>\n                    <Heading as=\"h3\" size=\"lg\" letterSpacing={\"-.1rem\"}>\n                      {exoIdtoExoDesc[d.exoId]}{\" \"}\n                    </Heading>\n                    {d.exoDetail.map((e) =>\n                      !e ? null : (\n                        <Text>\n                          {e.sets} Sets: {e.reps} Reps @ {e.weight}kg\n                        </Text>\n                      )\n                    )}\n                  </>\n                )\n              )}\n            </Box>\n          </Flex>\n        </Box>\n      ) : null}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}